{"version":3,"sources":["Components/TopBar.js","Components/FormHousingInfo.js","Components/FormApplianceInfo.js","Components/FormApplianceUsage.js","Components/UserForm.js","Components/Success.js","Pages/AirtableTest.js","Components/UsageGraph.js","lib/data.js","lib/model.js","lib/simulator.js","Pages/GraphTest.js","Components/PerformanceGraph.js","Components/SingleRecommendationGraph.js","lib/recommender.js","Pages/PerformanceTest.js","Pages/SimulatorTest.js","App.js","reportWebVitals.js","index.js"],"names":["TopBar","continue","e","preventDefault","props","nextStep","back","prevStep","AppBar","position","color","Toolbar","IconButton","edge","aria-label","Typography","variant","style","float","Button","to","Component","theme","createMuiTheme","palette","primary","main","blueGrey","secondary","green","spacing","FormPriority","handleChange","this","classes","Grid","className","shift","title","subTitle","question","TextField","textBox","placeholder","label","onChange","margin","fullWidth","onClick","withStyles","height","fontFamily","fontWeight","fontSize","marginTop","width","options","marginLeft","FormApplianceInfo","values","FormControlLabel","control","Checkbox","checked","dishwasher","stove","oven","fridge","freezer","washerDryer","heat","ac","buttons","marginBottom","marginRight","RadioGroup","name","value","dishWasherUsage","Radio","stoveUsage","ovenUsage","secondFridge","secondFreezer","washerUsage","dryerUsage","UserForm","state","step","location","squareFootage","monthlyUsage","dishwasherUsage","acUsage","setState","handleFieldChange","input","target","handleCheckChange","console","log","priority","FormHousingInfo","FormApplianceUsage","pathname","response","API_KEY","process","AirtableTest","useState","records","setRecords","useEffect","Airtable","apiKey","base","select","all","then","result","JSON","stringify","UsageGraph","data","axis","cols","concat","Object","entries","device","usage","push","ticks","i","x","xFormat","columns","type","groups","keys","order","interaction","enabled","transition","duration","point","show","localtime","tick","format","padding","left","y","min","DEVICE_NAMES","DEVICE_DAILY_FREQ","DEVICE_CYCLE_LENGTH","DEVICE_WATTAGE","OUTAGES","get_devices","questionnaire","params","devices","additionalDevices","summer","freq","cycle_length","wattage","pattern","residents","efficientLights","generate_model","daily_target_demand","minutes","total_demand","Array","fill","device_demand","device_cycles","init_device_cycles","threshold","Math","random","scaling_factor","reduce","a","b","map","watts","simulate_outage","model","outage","peak_demand","minute","start","end","max","GraphTest","totalDemand","setTotalDemand","deviceDemand","setDeviceDemand","setAxis","showDevices","setShowDevices","monthlySummerUsage","monthlyWinterUsage","washer","dryer","total","timestamps","generate_timestamps","PerformanceGraph","outages","solution","text","categories","bar","ratio","SingleRecommendationGraph","k","v","d","legend","size","assess_recommendation","rec","models","perf","length","start_time","floor","sim_result","peak_discharge","capacity","PerformanceTest","setData","recommendations","_models","perf_data","SimulatorTest","done","setDone","Date","getTime","App","exact","path","component","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.9e92f3a6.chunk.js","sourcesContent":["import React, { Component } from 'react';\nimport AppBar from '@material-ui/core/AppBar';\nimport Toolbar from '@material-ui/core/Toolbar'\nimport IconButton from '@material-ui/core/IconButton'\nimport MenuIcon from '@material-ui/icons/Menu';\nimport Typography from '@material-ui/core/Typography';\nimport Button from '@material-ui/core/Button';\nimport { Link } from 'react-router-dom';\n\nexport class TopBar extends Component {\n  continue = e => {\n    e.preventDefault();\n    this.props.nextStep();\n  };\n\n  back = e => {\n    e.preventDefault();\n    this.props.prevStep();\n  };\n\n  render() {\n    return (\n      <AppBar position=\"static\" color=\"primary\">\n        <Toolbar>\n          <IconButton edge=\"start\" color=\"inherit\" aria-label=\"menu\">\n            <MenuIcon />\n          </IconButton>\n          <Typography variant=\"h6\">\n            Lithium\n          </Typography>\n          <div style={{ float: \"right\" }}>\n            <Button color=\"inherit\">Home</Button>\n            <Button color=\"inherit\">About</Button>\n            <Button color=\"inherit\">My House Profile</Button>\n            <Link to=\"/airtable\"><Button color=\"inherit\">Airtable Test</Button></Link>\n          </div>\n        </Toolbar>\n      </AppBar>\n    );\n  }\n}\n\nexport default TopBar;","import React, { Component } from 'react';\nimport { createMuiTheme, ThemeProvider as MuiThemeProvider } from '@material-ui/core/styles';\nimport { withStyles } from '@material-ui/core/styles';\nimport Button from '@material-ui/core/Button';\nimport TopBar from './TopBar';\nimport blueGrey from '@material-ui/core/colors/blueGrey';\nimport green from '@material-ui/core/colors/green';\nimport { Typography } from '@material-ui/core';\nimport TextField from '@material-ui/core/TextField';\nimport Grid from '@material-ui/core/Grid';\n\nconst theme = createMuiTheme({\n  palette: {\n    primary: {\n      main: blueGrey[50],\n    },\n    secondary: {\n      main: green[800],\n    },\n  },\n  spacing: 8\n});\n\nconst styles = {\n  title: {\n    height: 80,\n    fontFamily: \"sans-serif\",\n    fontWeight: 50,\n    fontSize: 32,\n  },\n  subTitle: {\n    height: 60,\n    fontFamily: \"sans-serif\",\n    fontWeight: 30,\n    fontSize: 24,\n    color: '#2e7d32',\n  },\n  question: {\n    height: 0,\n    fontFamily: \"sans-serif\",\n    fontWeight: 'bold',\n    fontSize: 18,\n    marginTop: 10\n  },\n  textBox: {\n    width: 300\n  },\n  options: {\n    height: 140,\n  },\n  shift: {\n    marginLeft: 20,\n    marginTop: 20\n  }\n};\n\n\nexport class FormPriority extends Component {\n  continue = e => {\n    e.preventDefault();\n    this.props.nextStep();\n  };\n\n  render() {\n    const { handleChange } = this.props;\n    const { classes } = this.props;\n    return (\n      <MuiThemeProvider theme= {theme}> \n        <TopBar/>\n\n        <Grid className={classes.shift}>\n\n            <Typography className={classes.title}>Questionnaire</Typography>\n            <Typography className={classes.subTitle}>Housing Information</Typography>\n\n            <Typography className={classes.question}>Where do you live?</Typography>\n            <br />\n                <TextField\n                className={classes.textBox}\n                placeholder=\"Location\"\n                label=\"Location\"\n                onChange={handleChange('location')}\n                margin=\"normal\"\n                fullWidth\n                />\n            <br />\n\n            <Typography className={classes.question}>What is the square footage of your home?</Typography>\n            <br />\n                <TextField\n                className={classes.textBox}\n                placeholder=\"Square Footage\"\n                label=\"Square Footage\"\n                onChange={handleChange('squareFootage')}\n                margin=\"normal\"\n                fullWidth\n                />\n            <br />\n\n            <Typography className={classes.question}>What is your average monthly power usage during the summer (kWh)?</Typography>\n            <br />\n                <TextField\n                className={classes.textBox}\n                placeholder=\"Monthly usage\"\n                label=\"Monthly usage\"\n                onChange={handleChange('monthlyUsage')}\n                margin=\"normal\"\n                fullWidth\n                />\n            <br />\n\n            <Typography className={classes.question}>What is your average monthly power usage during the winter (kWh)?</Typography>\n            <br />\n                <TextField\n                className={classes.textBox}\n                placeholder=\"Monthly usage\"\n                label=\"Monthly usage\"\n                onChange={handleChange('monthlyUsage')}\n                margin=\"normal\"\n                fullWidth\n                />\n            <br />\n\n            <Button\n            color=\"secondary\"\n            variant=\"contained\"\n            onClick={this.continue}\n            >Continue</Button>\n        </Grid>\n      </MuiThemeProvider>\n    );\n  }\n}\n\nexport default withStyles(styles)(FormPriority);","import React, { Component } from 'react';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport { createMuiTheme, ThemeProvider as MuiThemeProvider } from '@material-ui/core/styles';\nimport { withStyles } from '@material-ui/core/styles';\nimport Button from '@material-ui/core/Button';\nimport TopBar from './TopBar';\nimport blueGrey from '@material-ui/core/colors/blueGrey';\nimport green from '@material-ui/core/colors/green';\nimport { Typography } from '@material-ui/core';\nimport Grid from '@material-ui/core/Grid';\nimport Checkbox from '@material-ui/core/Checkbox';\n\n\nconst theme = createMuiTheme({\n  palette: {\n    primary: {\n      main: blueGrey[50],\n    },\n    secondary: {\n      main: green[800],\n    },\n  },\n  spacing: 8\n});\n\nconst styles = {\n  buttons: {\n    marginTop: 60\n  },\n  title: {\n    height: 80,\n    fontFamily: \"sans-serif\",\n    fontWeight: 50,\n    fontSize: 32,\n  },\n  subTitle: {\n    height: 60,\n    fontFamily: \"sans-serif\",\n    fontWeight: 30,\n    fontSize: 24,\n    color: '#2e7d32',\n  },\n  question: {\n    height: 0,\n    fontFamily: \"sans-serif\",\n    fontWeight: 'bold',\n    fontSize: 18,\n    marginTop: 10,\n    marginBottom: 20\n  },\n  textBox: {\n    height: 120,\n    width: 300\n  },\n  options: {\n    height: 140,\n  },\n  shift: {\n    marginLeft: 20,\n    marginTop: 20\n  },\n  back: {\n    marginTop: -10,\n    marginRight: 10\n  }\n};\n\n\nexport class FormApplianceInfo extends Component {\n  continue = e => {\n    e.preventDefault();\n    this.props.nextStep();\n  };\n\n  back = e => {\n    e.preventDefault();\n    this.props.prevStep();\n  };\n\n  render() {\n    const { values, handleChange } = this.props;\n    const { classes } = this.props;\n    return (\n      <MuiThemeProvider theme={theme}>\n        <TopBar />\n\n        <Grid className={classes.shift}>\n\n          <Typography className={classes.title}>Questionnaire</Typography>\n          <Typography className={classes.subTitle}>Appliance Information</Typography>\n\n          <Typography className={classes.question}>Which of the following appliances do you own?</Typography>\n\n          <FormControlLabel\n            control={\n              <Checkbox\n                checked={values.dishwasher}\n                onChange={handleChange('dishwasher')}\n                color=\"secondary\"\n              />\n            }\n            label=\"Dishwasher\"\n          />\n          <br />\n          <FormControlLabel\n            control={\n              <Checkbox\n                checked={values.stove}\n                onChange={handleChange('stove')}\n                color=\"secondary\"\n              />\n            }\n            label=\"Electric Stove\"\n          />\n          <br />\n          <FormControlLabel\n            control={\n              <Checkbox\n                checked={values.oven}\n                onChange={handleChange('oven')}\n                color=\"secondary\"\n              />\n            }\n            label=\"Electric Oven\"\n          />\n          <br />\n          <FormControlLabel\n            control={\n              <Checkbox\n                checked={values.fridge}\n                onChange={handleChange('fridge')}\n                color=\"secondary\"\n              />\n            }\n            label=\"Refrigerator\"\n          />\n          <br />\n          <FormControlLabel\n            control={\n              <Checkbox\n                checked={values.freezer}\n                onChange={handleChange('freezer')}\n                color=\"secondary\"\n              />\n            }\n            label=\"Freezer\"\n          />\n          <br />\n          <FormControlLabel\n            control={\n              <Checkbox\n                checked={values.washerDryer}\n                onChange={handleChange('washerDryer')}\n                color=\"secondary\"\n              />\n            }\n            label=\"Washer/Dryer\"\n          />\n          <br />\n          <FormControlLabel\n            control={\n              <Checkbox\n                checked={values.heat}\n                onChange={handleChange('heat')}\n                color=\"secondary\"\n              />\n            }\n            label=\"Electric heating\"\n          />\n          <br />\n          <FormControlLabel\n            control={\n              <Checkbox\n                checked={values.ac}\n                onChange={handleChange('ac')}\n                color=\"secondary\"\n              />\n            }\n            label=\"Air Conditioning\"\n          />\n          <br />\n\n          <Grid>\n            <Button\n              className={classes.back}\n              color=\"primary\"\n              variant=\"contained\"\n              onClick={this.back}\n            >Back</Button>\n\n            <Button\n              color=\"secondary\"\n              variant=\"contained\"\n              onClick={this.continue}\n            >Continue</Button>\n          </Grid>\n\n        </Grid>\n      </MuiThemeProvider>\n    );\n  }\n}\n\nexport default withStyles(styles)(FormApplianceInfo);","import React, { Component } from 'react';\nimport RadioGroup from '@material-ui/core/RadioGroup';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport Radio from '@material-ui/core/Radio';\nimport { createMuiTheme, ThemeProvider as MuiThemeProvider } from '@material-ui/core/styles';\nimport { withStyles } from '@material-ui/core/styles';\nimport Button from '@material-ui/core/Button';\nimport TopBar from './TopBar';\nimport blueGrey from '@material-ui/core/colors/blueGrey';\nimport green from '@material-ui/core/colors/green';\nimport { Typography } from '@material-ui/core';\nimport TextField from '@material-ui/core/TextField';\nimport Grid from '@material-ui/core/Grid';\n\n\nconst theme = createMuiTheme({\n  palette: {\n    primary: {\n      main: blueGrey[50],\n    },\n    secondary: {\n      main: green[800],\n    },\n  },\n  spacing: 8\n});\n\nconst styles = {\n  buttons: {\n    marginTop: 60\n  },\n  title: {\n    height: 80,\n    fontFamily: \"sans-serif\",\n    fontWeight: 50,\n    fontSize: 32,\n  },\n  subTitle: {\n    height: 60,\n    fontFamily: \"sans-serif\",\n    fontWeight: 30,\n    fontSize: 24,\n    color: '#2e7d32',\n  },\n  question: {\n    height: 20,\n    fontFamily: \"sans-serif\",\n    fontWeight: 'bold',\n    fontSize: 18,\n    marginTop: 10,\n    marginBottom: 20\n  },\n  textBox: {\n    height: 120,\n    width: 300\n  },\n  options: {\n    height: 140,\n  },\n  shift: {\n    marginLeft: 20,\n    marginTop: 20\n  },\n  back: {\n    marginTop: -10,\n    marginRight: 10\n  }\n};\n\n\nexport class FormApplianceInfo extends Component {\n  continue = e => {\n    e.preventDefault();\n    this.props.nextStep();\n  };\n\n  back = e => {\n    e.preventDefault();\n    this.props.prevStep();\n  };\n\n  render() {\n    const { values, handleChange } = this.props;\n    const { classes } = this.props;\n    return (\n      <MuiThemeProvider theme={theme}>\n        <TopBar />\n\n        <Grid className={classes.shift}>\n\n          <Typography className={classes.title}>Questionnaire</Typography>\n          <Typography className={classes.subTitle}>Appliance Usage</Typography>\n\n          {values.dishwasher &&\n            <Typography className={classes.question}>How often do you use your dishwasher?</Typography>\n          }\n\n          {values.dishwasher &&\n            <RadioGroup className={classes.options} aria-label=\"priority\" color=\"inherit\" name=\"priority\" value={values.dishWasherUsage} onChange={handleChange('dishWasherUsage')}>\n              <FormControlLabel value=\"1\" control={<Radio />} label=\"1-2 times a week\" />\n              <FormControlLabel value=\"2\" control={<Radio />} label=\"3-5 times a week\" />\n              <FormControlLabel value=\"3\" control={<Radio />} label=\"More than 6 times a week\" />\n            </RadioGroup>\n          }\n\n          {values.stove &&\n            <Typography className={classes.question}>How often do you use your stove?</Typography>}\n\n          {values.stove &&\n            <RadioGroup className={classes.options} aria-label=\"priority\" color=\"inherit\" name=\"priority\" value={values.stoveUsage} onChange={handleChange('stoveUsage')}>\n              <FormControlLabel value=\"1\" control={<Radio />} label=\"1-2 times a week\" />\n              <FormControlLabel value=\"2\" control={<Radio />} label=\"3-5 times a week\" />\n              <FormControlLabel value=\"3\" control={<Radio />} label=\"More than 6 times a week\" />\n            </RadioGroup>\n          }\n\n          {values.oven &&\n            <Typography className={classes.question}>How often do you use your oven?</Typography>}\n\n          {values.oven &&\n            <RadioGroup className={classes.options} aria-label=\"priority\" color=\"inherit\" name=\"priority\" value={values.ovenUsage} onChange={handleChange('ovenUsage')}>\n              <FormControlLabel value=\"1\" control={<Radio />} label=\"1-2 times a week\" />\n              <FormControlLabel value=\"2\" control={<Radio />} label=\"3-5 times a week\" />\n              <FormControlLabel value=\"3\" control={<Radio />} label=\"More than 6 times a week\" />\n            </RadioGroup>\n          }\n\n          {values.fridge &&\n            <Typography className={classes.question}>Do you have a second fridge?</Typography>}\n\n          {values.fridge &&\n            <RadioGroup className={classes.options} aria-label=\"priority\" color=\"inherit\" name=\"priority\" value={values.secondFridge} onChange={handleChange('secondFridge')}>\n              <FormControlLabel value=\"1\" control={<Radio />} label=\"Yes\" />\n              <FormControlLabel value=\"2\" control={<Radio />} label=\"No\" />\n            </RadioGroup>\n          }\n\n          {values.freezer &&\n            <Typography className={classes.question}>Do you have a second freezer?</Typography>}\n\n          {values.freezer &&\n            <RadioGroup className={classes.options} aria-label=\"priority\" color=\"inherit\" name=\"priority\" value={values.secondFreezer} onChange={handleChange('secondFreezer')}>\n              <FormControlLabel value=\"1\" control={<Radio />} label=\"Yes\" />\n              <FormControlLabel value=\"2\" control={<Radio />} label=\"No\" />\n            </RadioGroup>\n          }\n\n          {values.washerDryer &&\n            <Typography className={classes.question}>How many loads of laundry do you do each week?</Typography>}\n\n          {values.washerDryer &&\n            <Typography className={classes.question}>How many loads of laundry do you do each week?</Typography>\n            &&\n            <RadioGroup className={classes.options} aria-label=\"priority\" color=\"inherit\" name=\"priority\" value={values.washerUsage} onChange={handleChange('washerUsage')}>\n              <FormControlLabel value=\"1\" control={<Radio />} label=\"1-2\" />\n              <FormControlLabel value=\"2\" control={<Radio />} label=\"3-5\" />\n              <FormControlLabel value=\"3\" control={<Radio />} label=\"6+\" />\n            </RadioGroup>\n          }\n\n          {values.washerDryer &&\n            <Typography className={classes.question}>How times do you use the dryer each week?</Typography>}\n\n          {values.washerDryer &&\n            <Typography className={classes.question}>How times do you use the dryer each week?</Typography>\n            &&\n            <RadioGroup className={classes.options} aria-label=\"priority\" color=\"inherit\" name=\"priority\" value={values.dryerUsage} onChange={handleChange('dryerUsage')}>\n              <FormControlLabel value=\"1\" control={<Radio />} label=\"1-2\" />\n              <FormControlLabel value=\"2\" control={<Radio />} label=\"3-5\" />\n              <FormControlLabel value=\"3\" control={<Radio />} label=\"6+\" />\n            </RadioGroup>\n          }\n\n          {values.ac &&\n            <Typography className={classes.question}>In the summer, how many days a month do you use your air conditioner?</Typography>}\n\n          {values.ac &&\n            <TextField\n              className={classes.textBox}\n              placeholder=\"Days per month\"\n              label=\"Days per month\"\n              onChange={handleChange('acUsage')}\n              margin=\"normal\"\n              fullWidth\n            />\n          }\n\n          <Grid>\n            <Button\n              className={classes.back}\n              color=\"primary\"\n              variant=\"contained\"\n              onClick={this.back}\n            >Back</Button>\n\n            <Button\n              color=\"secondary\"\n              variant=\"contained\"\n              onClick={this.continue}\n            >Continue</Button>\n          </Grid>\n\n        </Grid>\n      </MuiThemeProvider>\n    );\n  }\n}\n\nexport default withStyles(styles)(FormApplianceInfo);","import React, { Component } from 'react';\nimport FormHousingInfo from './FormHousingInfo';\nimport FormApplianceInfo from './FormApplianceInfo';\nimport FormApplianceUsage from './FormApplianceUsage';\nimport Success from './Success';\nimport { Link } from 'react-router-dom';\nimport { Button } from '@material-ui/core';\n\nexport class UserForm extends Component {\n  state = {\n    step: 1,\n    location: '',\n    squareFootage: '',\n    monthlyUsage: '',\n    dishwasher: false,\n    stove: false,\n    oven: false,\n    fridge: false,\n    freezer: false,\n    washerDryer: false,\n    heat: false,\n    ac: false,\n    dishwasherUsage: '',\n    stoveUsage: '',\n    ovenUsage: '',\n    secondFridge: '',\n    secondFreezer: '',\n    washerUsage: '',\n    dryerUsage: '',\n    acUsage: ''\n  };\n\n  // Proceed to next step\n  nextStep = () => {\n    const { step } = this.state;\n    this.setState({\n      step: step + 1\n    });\n  };\n\n  // Go back to prev step\n  prevStep = () => {\n    const { step } = this.state;\n    this.setState({\n      step: step - 1\n    });\n  };\n\n  // Handle fields change\n  handleFieldChange = input => e => {\n    this.setState({ [input]: e.target.value });\n  };\n\n  // Handle checkbox change\n  handleCheckChange = input => e => {\n    this.setState({ [input]: !this.state[input] });\n    console.log(this.state)\n  };\n\n  render() {\n    const { step } = this.state;\n    const { priority, location, squareFootage, monthlyUsage, dishwasher, stove, oven, fridge,\n      freezer, washerDryer, ac, heat, dishwasherUsage, stoveUsage, ovenUsage, secondFridge, secondFreezer,\n      washerUsage, dryerUsage, acUsage } = this.state;\n    const values = {\n      priority, location, squareFootage, monthlyUsage, dishwasher, stove, oven, fridge,\n      freezer, washerDryer, ac, heat, dishwasherUsage, stoveUsage, ovenUsage, secondFridge, secondFreezer,\n      washerUsage, dryerUsage, acUsage\n    };\n\n    switch (step) {\n      case 1:\n        return (\n          <FormHousingInfo\n            nextStep={this.nextStep}\n            handleChange={this.handleFieldChange}\n          />\n\n        );\n      case 2:\n        return (\n          <FormApplianceInfo\n            nextStep={this.nextStep}\n            prevStep={this.prevStep}\n            handleChange={this.handleCheckChange}\n            values={values}\n          />\n        );\n      case 3:\n        if (values.dishwasher || values.stove || values.washerDryer || values.ac || values.fridge || values.freezer) {\n          return (\n            <FormApplianceUsage\n              nextStep={this.nextStep}\n              prevStep={this.prevStep}\n              handleChange={this.handleFieldChange}\n              values={values}\n            />\n          )\n        };\n        return <Link to={{ pathname: \"/performance\", state: { response: this.state } }}>\n          <Button\n            color=\"secondary\"\n            variant=\"contained\"\n            onClick={this.continue}\n          >Continue</Button>\n        </Link>\n      case 4:\n        return <Link to={{ pathname: \"/performance\", state: { response: this.state } }}>\n          <Button\n            color=\"secondary\"\n            variant=\"contained\"\n            onClick={this.continue}\n          >Get recommendations</Button>\n        </Link>\n      default:\n        (console.log('This is a multi-step form built with React.'))\n    }\n  }\n}\n\nexport default UserForm;","import React, { Component } from 'react';\nimport Dialog from '@material-ui/core/Dialog';\nimport AppBar from '@material-ui/core/AppBar';\nimport { ThemeProvider as MuiThemeProvider } from '@material-ui/core/styles';\n\nexport class Success extends Component {\n  continue = e => {\n    e.preventDefault();\n    // PROCESS FORM //\n    this.props.nextStep();\n  };\n\n  back = e => {\n    e.preventDefault();\n    this.props.prevStep();\n  };\n\n  render() {\n    return (\n      <MuiThemeProvider>\n        <>\n          <Dialog\n            open\n            fullWidth\n            maxWidth='sm'\n          >\n            <AppBar title=\"Success\" />\n            <h1>Thank You For Your Submission</h1>\n            <p>You will get an email with further instructions.</p>\n          </Dialog>\n        </>\n      </MuiThemeProvider>\n    );\n  }\n}\n\nexport default Success;","// @flow\n\nimport Airtable from \"airtable\";\nimport React from 'react';\nimport { useEffect, useState } from \"react\";\nconst API_KEY: string = process.env.REACT_APP_AIRTABLE_KEY || \"\";\n\nexport const AirtableTest = (): React$Element<\"div\"> => {\n  const [records: Array< { [key: string]: any } >, setRecords: (Array<{ [key: string]: any }>) => void] = useState([]);\n\nuseEffect(() => {\n  var base = new Airtable({ apiKey: API_KEY }).base('appV6oQxcgRYsx3Wf');\n\n  base('Recipes')\n    .select()\n    .all()\n    .then((result: Array<{ [key: string]: any }>): void => {\n      setRecords(result);\n    })\n}, [])\nreturn <div>\n  <h1>{API_KEY}</h1>\n  <pre>{JSON.stringify(records, null, 2)}</pre>\n</div>\n}\n\nexport default AirtableTest;","// @flow\n\nimport * as React from 'react';\nimport C3Chart from 'react-c3js';\nimport 'c3/c3.css';\n\nexport const UsageGraph = (props: { data: { [any]: number[] }, axis: number[] }): React.Node => {\n  let { data, axis } = props;\n\n  let cols = [['x'].concat(axis)];\n\n  for (const [device, usage] of Object.entries(data)) {\n    cols.push([device].concat(usage));\n  }\n\n  let ticks = [];\n  for (let i = 0; i < 60 * 24; i += 60) {\n    ticks.push(i * 1000 * 60);\n  }\n\n  return (\n    <C3Chart\n      data={{\n        x: 'x',\n        xFormat: '%H:%M:%S',\n        columns: cols,\n        type: 'area',\n        groups: [[...Object.keys(data)]],\n        order: 'desc',\n      }}\n      interaction={{\n        enabled: false\n      }}\n      transition={{\n        duration: 0\n      }}\n      point={{\n        show: false\n      }}\n      axis={{\n        x: {\n          type: 'timeseries',\n          localtime: false,\n          tick: {\n            values: ticks,\n            format: \"%H\",\n          },\n          padding: { left: 0 }\n        },\n        y: {\n          min: 0,\n          padding: 0,\n        },\n      }}\n    />\n  )\n\n}\n\nexport default UsageGraph;","// @flow\n\nimport type { Device } from './types';\n\nexport const DEVICE_NAMES: Device[] = [\"dishwasher\", \"stove\", \"oven\", \"washer\",\n  \"dryer\", \"heat\", \"ac\", \"fridge\", \"freezer\", \"secondFridge\", \"secondFreezer\"]\n\nexport const DEVICE_DAILY_FREQ: { [Device]: number } = {\n  \"dishwasher\": 1,\n  \"stove\": 1,\n  \"oven\": 0.45,\n  \"washer\": 0.36,\n  \"dryer\": 0.25,\n  \"heat\": 3,\n  \"ac\": 1.5,\n  \"fridge\": 40,\n  \"freezer\": 5,\n  \"secondFridge\": 40,\n  \"secondFreezer\": 5,\n  // \"microwave\": 5,\n  // \"tv\": 1.62,\n  // \"hair dryer\": 1.5,\n}\n\nexport const DEVICE_CYCLE_LENGTH: { [Device]: number } = {\n  \"dishwasher\": 75,\n  \"stove\": 12,\n  \"oven\": 30,\n  \"washer\": 55,\n  \"dryer\": 75,\n  \"heat\": 15,\n  \"ac\": 120,\n  \"fridge\": 12,\n  \"freezer\": 10,\n  \"secondFridge\": 12,\n  \"secondFreezer\": 10,\n}\n\nexport const DEVICE_WATTAGE: { [Device]: number } = {\n  \"dishwasher\": 1140,\n  \"stove\": 2000,\n  \"oven\": 3000,\n  \"washer\": 1200,\n  \"dryer\": 5000,\n  \"heat\": 1000,\n  \"ac\": 1300,\n  \"fridge\": 110,\n  \"freezer\": 150,\n  \"secondFridge\": 90,\n  \"secondFreezer\": 80,\n}\n\nexport const HOURLY_PATTERNS = {\n  \"meals\": [\n    0.01, 0.005, 0.005, 0.005, 0.005, 0.01,\n    0.03, 0.06, 0.07, 0.06, 0.04, 0.075,\n    0.08, 0.07, 0.06, 0.02, 0.03, 0.05,\n    0.08, 0.1, 0.08, 0.04, 0.01, 0.005\n  ],\n}\n\nexport const OUTAGES = {\n  \"short\": 15,\n  \"medium\": 60,\n  \"long\": 180\n}","// @flow\n\nimport { DEVICE_CYCLE_LENGTH, DEVICE_DAILY_FREQ, DEVICE_NAMES, DEVICE_WATTAGE } from \"./data\";\nimport type { QuestionnaireResponse, Model, ModelParams, DeviceDefinition } from './types'\n\n// parses questionnaire and params into a list of devices to simulate\n// result should be passed to generate_model\nexport function get_devices(questionnaire: QuestionnaireResponse, params: ModelParams): DeviceDefinition[] {\n  let devices = [...questionnaire.additionalDevices];\n\n  for (let name of DEVICE_NAMES) {\n    // special cases\n    if (name === \"ac\" && !params.summer) {\n      continue;\n    } else if (name === \"heat\" && params.summer) {\n      continue;\n    }\n\n    devices.push({\n      name: name,\n      freq: DEVICE_DAILY_FREQ[name],\n      cycle_length: DEVICE_CYCLE_LENGTH[name],\n      wattage: DEVICE_WATTAGE[name],\n      pattern: null\n    })\n  }\n\n  // lights\n  for (let i = 0; i < questionnaire.residents; i++) {\n    devices.push({\n      name: `lights${i}`,\n      freq: 6,\n      cycle_length: 1,\n      wattage: questionnaire.efficientLights ? 20 : 100,\n      pattern: null,\n    })\n  }\n\n  return devices;\n}\n\nfunction init_device_cycles(devices: DeviceDefinition[]): { [string]: number } {\n  let device_cycles = {};\n  for (let device of devices) {\n    device_cycles[device.name] = 0;\n  }\n\n  return device_cycles\n}\n\n// generates a demand model over the course of a day\nexport function generate_model(devices: DeviceDefinition[], daily_target_demand: number): Model {\n  // Number of ticks to use\n  let minutes = 60 * 24;\n\n  // Total demand at each tick\n  let total_demand: number[] = Array(minutes).fill(0);\n  let device_demand: { [string]: number[] } = {};\n  for (const device of devices) {\n    device_demand[device.name] = [...total_demand];\n  }\n\n  // Track cycle progression for each device, indicates remaining ticks\n  let device_cycles = init_device_cycles(devices);\n\n  for (let i = 0; i < minutes; i++) {\n    for (const device of devices) {\n      if (device_cycles[device.name] > 0) {\n        // Decrement cycle length and add wattage to demand\n        device_cycles[device.name]--;\n\n        total_demand[i] += device.wattage\n        device_demand[device.name][i] += device.wattage\n      } else {\n        // Start a new cycle if random value is above threshold\n        let threshold = device.freq / minutes;\n        if (Math.random() < threshold) {\n          device_cycles[device.name] = device.cycle_length\n        }\n      }\n    }\n  }\n\n  // Scale demand to match actual amount\n\n  // Divide by 60 to convert watt-minutes to watt-hours\n  let daily_actual_demand = total_demand.reduce((a, b) => a + b, 0) / 60;\n\n  // Scale values to match power bill\n  let scaling_factor = daily_target_demand / daily_actual_demand;\n  total_demand = total_demand.map((watts) => watts * scaling_factor);\n  for (let device of devices) {\n    device_demand[device.name] = device_demand[device.name].map((watts) => watts * scaling_factor)\n  }\n\n  return { total_demand, device_demand };\n}\n\nexport function generate_timestamps(): number[] {\n  let timestamps = [];\n  for (let i = 0; i < 24 * 60; i++) {\n    timestamps.push(i * 60 * 1000);\n  }\n\n  return timestamps;\n}\n","import type { Model, Outage, SimulatorResult } from './types'\n\nexport function simulate_outage(model: Model, outage: Outage): SimulatorResult {\n  let result = {\n    peak_demand: 0,\n    total_demand: 0\n  }\n\n  for (let minute = outage.start; minute < outage.end; minute++) {\n    result.total_demand += model.total_demand[minute] / 60; // convert to watt-hours\n    result.peak_demand = Math.max(result.peak_demand, model.total_demand[minute]);\n  }\n\n  return result;\n}","// @flow\n\nimport { Button } from '@material-ui/core';\nimport * as React from 'react';\nimport { useEffect, useState } from \"react\";\nimport UsageGraph from '../Components/UsageGraph';\nimport { generate_model, generate_timestamps, get_devices } from '../lib/model';\nimport { simulate_outage } from '../lib/simulator';\nimport type { Model, ModelParams, QuestionnaireResponse } from '../lib/types'\n\nexport const GraphTest = (): React.Node => {\n  let [totalDemand: { [string]: number[]}, setTotalDemand] = useState({});\n  let [deviceDemand: { [string]: number[]}, setDeviceDemand] = useState({});\n  let [axis, setAxis] = useState([]);\n  let [showDevices, setShowDevices] = useState(false);\n\n  useEffect(() => {\n    let questionnaire: QuestionnaireResponse = {\n      location: \"Canada\",\n      squareFootage: 450,\n      residents: 4,\n      efficientLights: true,\n      monthlySummerUsage: 600,\n      monthlyWinterUsage: 800,\n      dishwasher: true,\n      stove: true,\n      oven: true,\n      washer: true,\n      dryer: true,\n      heat: true,\n      ac: true,\n      fridge: true,\n      freezer: true,\n      secondFridge: true,\n      secondFreezer: true,\n      dishwasherUsage: 2,\n      stoveUsage: 2,\n      ovenUsage: 2,\n      washerUsage: 2,\n      dryerUsage: 2,\n      acUsage: 15,\n      additionalDevices: [],\n    }\n    let params: ModelParams = { summer: true };\n    let devices = get_devices(questionnaire, params)\n    let daily_target_demand = (params.summer\n      ? questionnaire.monthlySummerUsage\n      : questionnaire.monthlyWinterUsage)\n      * 1000 // kWh to Wh\n      / 30.5; // monthly -> daily\n    let model: Model = generate_model(devices, daily_target_demand);\n\n    setTotalDemand({ total: model.total_demand });\n    setDeviceDemand(model.device_demand);\n    setAxis(generate_timestamps());\n\n    console.log(simulate_outage(model, { start: 60, end: 120 }));\n  }, [])\n\n  if (showDevices) {\n    return <div key=\"show\">\n      <UsageGraph data={deviceDemand} axis={axis} />\n      <Button variant=\"contained\" onClick={() => setShowDevices(false)}>Hide devices</Button>\n    </div>\n  } else {\n    return <div key=\"hide\">\n      <UsageGraph data={totalDemand} axis={axis} />\n      <Button variant=\"contained\" onClick={() => setShowDevices(true)}>Show devices</Button>\n    </div>\n  }\n}\n\nexport default GraphTest;","// @flow\n\nimport * as React from 'react';\nimport C3Chart from 'react-c3js';\nimport 'c3/c3.css';\n\nexport const PerformanceGraph = (props: { data: { [string]: number[] }, outages: string[] }): React.Node => {\n  let { data, outages } = props;\n\n  let cols = Object.entries(data).map(([solution, result]) => [solution].concat(result))\n\n  return (\n    <C3Chart\n      data={{\n        columns: cols,\n        type: \"bar\",\n      }}\n      axis={{\n        x: {\n          label: {\n            text: \"Outage time period\",\n            position: \"outer-center\",\n          },\n          type: \"category\",\n          categories: outages\n        },\n        y: {\n          label: {\n            text: \"Outages prevented\",\n            position: \"outer-center\",\n          }\n        }\n      }}\n      bar={{\n        width: {\n          ratio: 0.5\n        }\n      }}\n    />\n  )\n\n}\n\nexport default PerformanceGraph;","// @flow\n\nimport * as React from 'react';\nimport C3Chart from 'react-c3js';\nimport 'c3/c3.css';\nimport type { RecommendationPerformance } from \"../lib/types\"\n\nexport const SingleRecommendationGraph = (props: { data: RecommendationPerformance }): React.Node => {\n  let { data } = props;\n  let cols = [];\n  return Object.entries(data).map(([k, v]) => {\n    return <C3Chart\n      data={{\n        columns: [[k].concat(v)],\n        type: \"bar\",\n        color: (color, d) => [null, \"red\", \"orange\", \"yellow\", \"green\"][d.value]\n      }}\n      legend={{ show: false }}\n      bar={{\n        width: {\n          ratio: 1\n        }\n      }}\n      size={{\n        height: 64,\n      }}\n    />\n  })\n}\n\nexport default SingleRecommendationGraph;","import { simulate_outage } from './simulator';\nimport type { Model, Outage, RecommendationPerformance, SimulatorResult, StorageSolution as StorageRec } from './types'\n\nexport function assess_recommendation(\n  rec: StorageRec,\n  models: Model[],\n  outages: { [string]: Outage }): RecommendationPerformance {\n  // Runs each outage type on each model. \n  // Returns the success or failure on each model for each outage.\n  // Maps outage name to an array of results: 1 (red) for charge and capacity failure,\n  // 2 (orange) for charge failure, 3 (yellow) for capacity failure, 4 (green) for all good\n\n  let perf: RecommendationPerformance = {};\n  for (let [name, length] of Object.entries(outages)) {\n    perf[name] = [];\n    for (let model of models) {\n      // randomize start time\n      let start_time = Math.floor(Math.random() * Math.floor(60 * 24 - length));\n      let sim_result = simulate_outage(model, {\n        start: start_time,\n        end: start_time + length\n      });\n\n      if (sim_result.peak_demand > rec.peak_discharge && sim_result.total_demand > rec.capacity) {\n        perf[name].push(1);\n      } else if (sim_result.peak_demand > rec.peak_discharge) {\n        perf[name].push(2);\n      } else if (sim_result.total_demand > rec.capacity) {\n        perf[name].push(3);\n      } else {\n        perf[name].push(4);\n      }\n    }\n  }\n\n  return perf;\n}","// @flow\nimport * as React from 'react';\nimport { useEffect, useState } from \"react\";\nimport PerformanceGraph from '../Components/PerformanceGraph';\nimport SingleRecommendationGraph from '../Components/SingleRecommendationGraph';\nimport { OUTAGES } from '../lib/data';\nimport { generate_model, get_devices } from '../lib/model';\nimport { assess_recommendation } from '../lib/recommender';\nimport { simulate_outage } from '../lib/simulator';\nimport type { Model, ModelParams, QuestionnaireResponse } from '../lib/types'\n\nexport const PerformanceTest = (props: {\n  location: {\n    state: {\n      response: QuestionnaireResponse\n    }\n  }\n}): React.Node => {\n  // let { response } = props.location.state;\n  // console.log(props);\n  let response = {\n    location: \"Canada\",\n    squareFootage: 450,\n    residents: 4,\n    efficientLights: true,\n    monthlySummerUsage: 600,\n    monthlyWinterUsage: 800,\n    dishwasher: true,\n    stove: true,\n    oven: true,\n    washer: true,\n    dryer: true,\n    heat: true,\n    ac: true,\n    fridge: true,\n    freezer: true,\n    secondFridge: true,\n    secondFreezer: true,\n    dishwasherUsage: 2,\n    stoveUsage: 2,\n    ovenUsage: 2,\n    washerUsage: 2,\n    dryerUsage: 2,\n    acUsage: 15,\n    additionalDevices: [],\n  };\n  let [data, setData] = useState({});\n  let [outages, setOutages] = useState({\n    \"6-6:15\": {\n      start: 360,\n      end: 375,\n    },\n    \"11:30-11:45\": {\n      start: 690,\n      end: 705,\n    },\n    \"20:45-21:00\": {\n      start: 1245,\n      end: 1260,\n    },\n    \"6-6:45\": {\n      start: 360,\n      end: 405,\n    },\n    \"11:30-12:15\": {\n      start: 690,\n      end: 735,\n    },\n    \"20:45-21:30\": {\n      start: 1245,\n      end: 1290,\n    },\n    \"6-9\": {\n      start: 360,\n      end: 540,\n    },\n    \"11:30-14:30\": {\n      start: 690,\n      end: 870,\n    },\n    \"20:45-23:45\": {\n      start: 1245,\n      end: 1425,\n    }\n  });\n  let [recommendations, useRecommendations] = useState([\n    {\n      name: \"nothing\",\n      capacity: 0,\n      peak_discharge: 0,\n    },\n    {\n      name: \"sonnen eco small\",\n      capacity: 5000,\n      peak_discharge: 3000,\n    },\n    {\n      name: \"powerwall\",\n      capacity: 8000,\n      peak_discharge: 5000,\n    },\n  ]);\n  let [models, setModels] = useState(() => {\n    let _models: Model[] = []; // generate ten models\n    for (let i = 0; i < 90; i++) {\n      let questionnaire: QuestionnaireResponse = response;\n      let params: ModelParams = { summer: true };\n      let devices = get_devices(questionnaire, params)\n      let daily_target_demand = (params.summer\n        ? questionnaire.monthlySummerUsage\n        : questionnaire.monthlyWinterUsage)\n        * 1000\n        / 30.5;\n      _models.push(generate_model(devices, daily_target_demand));\n    }\n    return _models;\n  })\n\n  useEffect(() => {\n\n\n    let perf_data = {};\n    let rec_data = {};\n\n    for (let rec of recommendations) {\n      perf_data[rec.name] = [];\n\n      for (let [outage_name, outage] of Object.entries(outages)) {\n        let total = 0;\n        for (let model of models) {\n          let result = simulate_outage(model, outage);\n          if (rec.capacity < result.total_demand || rec.peak_discharge < result.peak_demand) {\n            total++;\n          }\n        }\n\n        perf_data[rec.name].push(30 - total);\n      }\n    }\n\n    setData(perf_data);\n  }, [])\n\n  return <>\n    <h2>Outages prevented (out of 30) per recommendation and outage type</h2>\n    <PerformanceGraph data={data} outages={Object.keys(outages)} />\n    {recommendations.map(rec => <>\n      <h3>Recommendation {rec.name}</h3>\n      <SingleRecommendationGraph data={assess_recommendation(rec, models, OUTAGES)} />\n    </>)}\n\n  </>\n}\n\nexport default PerformanceTest;","// @flow\n\nimport * as React from 'react';\nimport { useEffect, useState } from \"react\";\nimport { generate_model, get_devices } from '../lib/model';\nimport type { QuestionnaireResponse, ModelParams, Model } from '../lib/types';\n\nexport const SimulatorTest = (): React.Node => {\n  let [done, setDone] = useState(false)\n  useEffect(() => {\n    // Generate 20 models\n    let start = new Date();\n    for (let i = 0; i < 20; i++) {\n      let questionnaire: QuestionnaireResponse = {\n        location: \"Canada\",\n        squareFootage: 450,\n        residents: 4,\n        efficientLights: true,\n        monthlySummerUsage: 600,\n        monthlyWinterUsage: 800,\n        dishwasher: true,\n        stove: true,\n        oven: true,\n        washer: true,\n        dryer: true,\n        heat: true,\n        ac: true,\n        fridge: true,\n        freezer: true,\n        secondFridge: true,\n        secondFreezer: true,\n        dishwasherUsage: 2,\n        stoveUsage: 2,\n        ovenUsage: 2,\n        washerUsage: 2,\n        dryerUsage: 2,\n        acUsage: 15,\n        additionalDevices: [],\n      }\n      let params: ModelParams = { summer: true };\n      let devices = get_devices(questionnaire, params)\n      let daily_target_demand = (params.summer\n        ? questionnaire.monthlySummerUsage\n        : questionnaire.monthlyWinterUsage)\n        * 1000 // kWh to Wh\n        / 30.5; // monthly -> daily\n      let model: Model = generate_model(devices, daily_target_demand);\n    }\n    setDone(new Date().getTime() - start.getTime());\n  }, [])\n\n  return <div>{done}ms to generate 20 models</div>\n}\n\nexport default SimulatorTest;","import React from 'react';\nimport { BrowserRouter, Route, Switch } from 'react-router-dom';\nimport { UserForm } from './Components/UserForm';\nimport { AirtableTest } from './Pages/AirtableTest';\nimport GraphTest from './Pages/GraphTest';\nimport PerformanceTest from './Pages/PerformanceTest';\nimport SimulatorTest from './Pages/SimulatorTest';\n\nconst App = () => {\n  return (\n    <div className=\"App\">\n      <BrowserRouter>\n        <Switch>\n          <Route exact path=\"/\" component={UserForm}></Route>\n          <Route path=\"/airtable\" component={AirtableTest}></Route>\n          <Route path=\"/graph\" component={GraphTest}></Route>\n          <Route path=\"/simulator\" component={SimulatorTest}></Route>\n          <Route path=\"/performance\" component={PerformanceTest}></Route>\n        </Switch>\n      </BrowserRouter>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}