{"version":3,"sources":["Components/TopBar.js","Components/FormHousingInfo.js","Components/FormApplianceInfo.js","Components/ApplianceUsageQuestion.js","Components/FormApplianceUsage.js","Components/UserForm.js","Components/Success.js","Pages/AirtableTest.js","Components/UsageGraph.js","lib/data.js","lib/model.js","lib/simulator.js","Pages/GraphTest.js","Components/PerformanceGraph.js","Components/SingleRecommendationGraph.js","lib/recommender.js","Pages/PerformanceTest.js","Pages/SimulatorTest.js","App.js","reportWebVitals.js","index.js"],"names":["TopBar","continue","e","preventDefault","props","nextStep","back","prevStep","AppBar","position","color","Toolbar","IconButton","edge","aria-label","Typography","variant","style","float","Button","to","Component","theme","createMuiTheme","palette","primary","main","blueGrey","secondary","green","spacing","FormPriority","this","handleChange","values","classes","Grid","className","shift","title","subTitle","question","FormControl","InputLabel","htmlFor","Select","native","onChange","inputProps","id","value","TextField","textBox","placeholder","type","label","margin","fullWidth","onClick","withStyles","height","fontFamily","fontWeight","fontSize","marginTop","width","options","marginLeft","FormApplicanceInfo","handleCheckChange","handleFieldChange","FormControlLabel","control","Checkbox","checked","dishwasher","quantity","InputLabelProps","shrink","stove","oven","fridge","freezer","washerDryer","heat","ac","windOrCentral","windowUnits","eeBulbs","buttons","marginBottom","marginRight","ApplianceUsageQuestion","usage","applianceName","applianceKey","FormApplianceInfo","dishwasherUsage","stoveUsage","ovenUsage","washerUsage","dryerUsage","UserForm","state","step","location","squareFootage","numberOfPeopleInHousehold","summerUsage","winterUsage","acUsage","setState","input","target","parseInt","console","log","priority","monthlyUsage","secondFridge","secondFreezer","FormHousingInfo","FormApplianceUsage","pathname","response","API_KEY","process","AirtableTest","useState","records","setRecords","useEffect","Airtable","apiKey","base","select","all","then","result","JSON","stringify","UsageGraph","data","axis","cols","concat","Object","entries","device","push","ticks","i","x","xFormat","columns","groups","keys","order","interaction","enabled","transition","duration","point","show","localtime","tick","format","padding","left","y","min","DEVICE_NAMES","DEVICE_DAILY_FREQ","DEVICE_CYCLE_LENGTH","DEVICE_WATTAGE","OUTAGES","get_devices","questionnaire","params","devices","additionalDevices","name","summer","freq","cycle_length","wattage","pattern","residents","efficientLights","generate_model","daily_target_demand","minutes","total_demand","Array","fill","device_demand","device_cycles","init_device_cycles","threshold","Math","random","scaling_factor","reduce","a","b","map","watts","simulate_outage","model","outage","peak_demand","minute","start","end","max","GraphTest","totalDemand","setTotalDemand","deviceDemand","setDeviceDemand","setAxis","showDevices","setShowDevices","monthlySummerUsage","monthlyWinterUsage","washer","dryer","total","timestamps","generate_timestamps","PerformanceGraph","outages","solution","text","categories","bar","ratio","SingleRecommendationGraph","k","v","d","legend","size","assess_recommendation","rec","models","perf","length","start_time","floor","sim_result","peak_discharge","capacity","PerformanceTest","setData","recommendations","_models","perf_data","SimulatorTest","done","setDone","Date","getTime","App","exact","path","component","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.41f0153a.chunk.js","sourcesContent":["import React, { Component } from 'react';\nimport AppBar from '@material-ui/core/AppBar';\nimport Toolbar from '@material-ui/core/Toolbar'\nimport IconButton from '@material-ui/core/IconButton'\nimport MenuIcon from '@material-ui/icons/Menu';\nimport Typography from '@material-ui/core/Typography';\nimport Button from '@material-ui/core/Button';\nimport { Link } from 'react-router-dom';\n\nexport class TopBar extends Component {\n  continue = e => {\n    e.preventDefault();\n    this.props.nextStep();\n  };\n\n  back = e => {\n    e.preventDefault();\n    this.props.prevStep();\n  };\n\n  render() {\n    return (\n      <AppBar position=\"static\" color=\"primary\">\n        <Toolbar>\n          <IconButton edge=\"start\" color=\"inherit\" aria-label=\"menu\">\n            <MenuIcon />\n          </IconButton>\n          <Typography variant=\"h6\">\n            Lithium\n          </Typography>\n          <div style={{ float: \"right\" }}>\n            <Button color=\"inherit\">Home</Button>\n            <Button color=\"inherit\">About</Button>\n            <Button color=\"inherit\">My House Profile</Button>\n            <Link to=\"/airtable\"><Button color=\"inherit\">Airtable Test</Button></Link>\n          </div>\n        </Toolbar>\n      </AppBar>\n    );\n  }\n}\n\nexport default TopBar;","import React, { Component } from 'react';\nimport { createMuiTheme, ThemeProvider as MuiThemeProvider } from '@material-ui/core/styles';\nimport { withStyles } from '@material-ui/core/styles';\nimport Button from '@material-ui/core/Button';\nimport TopBar from './TopBar';\nimport blueGrey from '@material-ui/core/colors/blueGrey';\nimport green from '@material-ui/core/colors/green';\nimport { Typography } from '@material-ui/core';\nimport TextField from '@material-ui/core/TextField';\nimport Grid from '@material-ui/core/Grid';\nimport InputLabel from '@material-ui/core/InputLabel';\nimport FormControl from '@material-ui/core/FormControl';\nimport Select from '@material-ui/core/Select';\n\n\nconst theme = createMuiTheme({\n  palette: {\n    primary: {\n      main: blueGrey[50],\n    },\n    secondary: {\n      main: green[800],\n    },\n  },\n  spacing: 8\n});\n\nconst styles = {\n  title: {\n    height: 80,\n    fontFamily: \"sans-serif\",\n    fontWeight: 50,\n    fontSize: 32,\n  },\n  subTitle: {\n    height: 60,\n    fontFamily: \"sans-serif\",\n    fontWeight: 30,\n    fontSize: 24,\n    color: '#2e7d32',\n  },\n  question: {\n    height: 0,\n    fontFamily: \"sans-serif\",\n    fontWeight: 'bold',\n    fontSize: 18,\n    marginTop: 10\n  },\n  textBox: {\n    width: 300\n  },\n  options: {\n    height: 140,\n  },\n  shift: {\n    marginLeft: 20,\n    marginTop: 20\n  }\n};\n\n\nexport class FormPriority extends Component {\n  continue = e => {\n    e.preventDefault();\n    this.props.nextStep();\n  };\n\n  render() {\n    const { values, handleChange } = this.props;\n    const { classes } = this.props;\n    return (\n      <MuiThemeProvider theme= {theme}> \n        <TopBar/>\n\n        <Grid className={classes.shift}>\n\n            <Typography className={classes.title}>Questionnaire</Typography>\n            <Typography className={classes.subTitle}>Housing Information</Typography>\n\n            <Typography className={classes.question}>What province/territory do you live in?</Typography>\n            <br />\n            <FormControl>\n              <InputLabel htmlFor=\"age-native-simple\"></InputLabel>\n              <Select\n                native\n                onChange={handleChange('location')}\n                inputProps={{\n                  id: 'age-native-simple',\n                }}\n              >\n                <option aria-label=\"None\" value=\"\" />\n                <option value={'ON'}>Ontario</option>\n                <option value={'QC'}>Quebec</option>\n                <option value={'MB'}>Manitoba</option>\n                <option value={'SK'}>Saskatchewan</option>\n                <option value={'AB'}>Alberta</option>\n                <option value={'BC'}>British Columbia</option>\n                <option value={'NL'}>Newfoundland and Labrador</option>\n                <option value={'NS'}>Nova Scotia</option>\n                <option value={'NB'}>New Brunswick</option>\n                <option value={'PE'}>Prince Edward Island</option>\n                <option value={'NU'}>Nunavut</option>\n                <option value={'NT'}>Northwest Territories</option>\n                <option value={'YT'}>Yukon</option>\n\n              </Select>\n            </FormControl>\n            <br />\n\n            <Typography className={classes.question}>What is the square footage of your home?</Typography>\n            <br />\n                <TextField\n                className={classes.textBox}\n                placeholder=\"Square Footage\"\n                type='number'\n                label=\"Square Footage\"\n                onChange={handleChange('squareFootage')}\n                margin=\"normal\"\n                fullWidth\n                />\n            <br />\n\n            <Typography className={classes.question}>How many people live in your home?</Typography>\n            <br />\n                <TextField\n                className={classes.textBox}\n                placeholder=\"Size of houshold\"\n                type='number'\n                label=\"Size of houshold\"\n                onChange={handleChange('numberOfPeopleInHousehold')}\n                margin=\"normal\"\n                fullWidth\n                />\n            <br />\n\n            <Typography className={classes.question}>What is your average monthly power usage during the summer (kWh)?</Typography>\n            <br />\n                <TextField\n                className={classes.textBox}\n                placeholder=\"Monthly usage\"\n                type='number'\n                label=\"Monthly usage\"\n                onChange={handleChange('summerUsage')}\n                margin=\"normal\"\n                fullWidth\n                />\n            <br />\n\n            <Typography className={classes.question}>What is your average monthly power usage during the winter (kWh)?</Typography>\n            <br />\n                <TextField\n                className={classes.textBox}\n                placeholder=\"Monthly usage\"\n                type='number'\n                label=\"Monthly usage\"\n                onChange={handleChange('winterUsage')}\n                margin=\"normal\"\n                fullWidth\n                />\n            <br />\n\n            <Button\n            color=\"secondary\"\n            variant=\"contained\"\n            onClick={this.continue}\n            >Continue</Button>\n        </Grid>\n      </MuiThemeProvider>\n    );\n  }\n}\n\nexport default withStyles(styles)(FormPriority);","import React, { Component } from 'react';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport { createMuiTheme, ThemeProvider as MuiThemeProvider } from '@material-ui/core/styles';\nimport { withStyles } from '@material-ui/core/styles';\nimport Button from '@material-ui/core/Button';\nimport TopBar from './TopBar';\nimport blueGrey from '@material-ui/core/colors/blueGrey';\nimport green from '@material-ui/core/colors/green';\nimport { Typography } from '@material-ui/core';\nimport Grid from '@material-ui/core/Grid';\nimport Checkbox from '@material-ui/core/Checkbox';\nimport TextField from '@material-ui/core/TextField';\nimport InputLabel from '@material-ui/core/InputLabel';\nimport FormControl from '@material-ui/core/FormControl';\nimport Select from '@material-ui/core/Select';\n\n\nconst theme = createMuiTheme({\n  palette: {\n    primary: {\n      main: blueGrey[50],\n    },\n    secondary: {\n      main: green[800],\n    },\n  },\n  spacing: 8\n});\n\nconst styles = {\n  buttons: {\n    marginTop: 60\n  },\n  title: {\n    height: 80,\n    fontFamily: \"sans-serif\",\n    fontWeight: 50,\n    fontSize: 32,\n  },\n  subTitle: {\n    height: 60,\n    fontFamily: \"sans-serif\",\n    fontWeight: 30,\n    fontSize: 24,\n    color: '#2e7d32',\n  },\n  question: {\n    height: 0,\n    fontFamily: \"sans-serif\",\n    fontWeight: 'bold',\n    fontSize: 18,\n    marginTop: 10,\n    marginBottom: 20\n  },\n  textBox: {\n    height: 120,\n    width: 300\n  },\n  options: {\n    height: 140,\n  },\n  shift: {\n    height: 1000,\n    marginLeft: 20,\n    marginTop: 20\n  },\n  back: {\n    marginTop: -10,\n    marginRight: 10\n  },\n  quantity: {\n    width: 40\n  },\n  windOrCentral: {\n    width: 150\n  }\n};\n\n\nexport class FormApplicanceInfo extends Component {\n  continue = e => {\n    e.preventDefault();\n    this.props.nextStep();\n  };\n\n  back = e => {\n    e.preventDefault();\n    this.props.prevStep();\n  };\n\n  render() {\n    const { values, handleCheckChange, handleFieldChange } = this.props;\n    const { classes } = this.props;\n    return (\n      <MuiThemeProvider theme={theme}>\n        <TopBar />\n\n        <Grid className={classes.shift}>\n\n          <Typography className={classes.title}>Questionnaire</Typography>\n          <Typography className={classes.subTitle}>Appliance Information</Typography>\n\n          <Typography className={classes.question}>Which of the following appliances do you own?</Typography>\n\n          <FormControlLabel\n            control={\n              <Checkbox\n                checked={values.dishwasher}\n                onChange={handleCheckChange('dishwasher')}\n                color=\"secondary\"\n              />\n            }\n            label=\"Dishwasher\"\n          />\n          {!!values.dishwasher &&\n            <TextField\n              className={classes.quantity}\n              id=\"standard-number\"\n              label=\"Quantity\"\n              type=\"number\"\n              value={values.dishwasher}\n              onChange={handleFieldChange('dishwasher')}\n              InputLabelProps={{\n                shrink: true,\n              }}\n            />}\n          <br />\n          <FormControlLabel\n            control={\n              <Checkbox\n                checked={values.stove}\n                onChange={handleCheckChange('stove')}\n                color=\"secondary\"\n              />\n            }\n            label=\"Electric Stove\"\n          />\n          {!!values.stove &&\n            <TextField\n              className={classes.quantity}\n              id=\"standard-number\"\n              label=\"Quantity\"\n              type=\"number\"\n              value={values.stove}\n              onChange={handleFieldChange('stove')}\n              InputLabelProps={{\n                shrink: true,\n              }}\n            />}\n          <br />\n          <FormControlLabel\n            control={\n              <Checkbox\n                checked={values.oven}\n                onChange={handleCheckChange('oven')}\n                color=\"secondary\"\n              />\n            }\n            label=\"Electric Oven\"\n          />\n          {!!values.oven &&\n            <TextField\n              className={classes.quantity}\n              id=\"standard-number\"\n              label=\"Quantity\"\n              type=\"number\"\n              value={values.oven}\n              onChange={handleFieldChange('oven')}\n              InputLabelProps={{\n                shrink: true,\n              }}\n            />}\n          <br />\n          <FormControlLabel\n            control={\n              <Checkbox\n                checked={values.fridge}\n                onChange={handleCheckChange('fridge')}\n                color=\"secondary\"\n              />\n            }\n            label=\"Refrigerator\"\n          />\n          {!!values.fridge &&\n            <TextField\n              className={classes.quantity}\n              id=\"standard-number\"\n              label=\"Quantity\"\n              type=\"number\"\n              value={values.fridge}\n              onChange={handleFieldChange('fridge')}\n              InputLabelProps={{\n                shrink: true,\n              }}\n            />}\n          <br />\n          <FormControlLabel\n            control={\n              <Checkbox\n                checked={values.freezer}\n                onChange={handleCheckChange('freezer')}\n                color=\"secondary\"\n              />\n            }\n            label=\"Freezer\"\n          />\n          {!!values.freezer &&\n            <TextField\n              className={classes.quantity}\n              id=\"standard-number\"\n              label=\"Quantity\"\n              type=\"number\"\n              value={values.freezer}\n              onChange={handleFieldChange('freezer')}\n              InputLabelProps={{\n                shrink: true,\n              }}\n            />}\n          <br />\n          <FormControlLabel\n            control={\n              <Checkbox\n                checked={values.washerDryer}\n                onChange={handleCheckChange('washerDryer')}\n                color=\"secondary\"\n              />\n            }\n            label=\"Washer/Dryer\"\n          />\n          <br />\n          <FormControlLabel\n            control={\n              <Checkbox\n                checked={values.heat}\n                onChange={handleCheckChange('heat')}\n                color=\"secondary\"\n              />\n            }\n            label=\"Electric heating\"\n          />\n          <br />\n          <FormControlLabel\n            control={\n              <Checkbox\n                checked={values.ac}\n                onChange={handleCheckChange('ac')}\n                color=\"secondary\"\n              />\n            }\n            label=\"Air Conditioning\"\n          />\n          {!!values.ac &&\n            <FormControl className={classes.windOrCentral} >\n              <InputLabel htmlFor=\"age-native-simple\">Wind or Central?</InputLabel>\n              <Select\n                style={{ width: 120 }}\n                native\n                label=\"Wind or Central?\"\n                onChange={handleFieldChange('windOrCentral')}\n                inputProps={{\n                  id: 'age-native-simple',\n                }}\n              >\n                <option value={0}>Central</option>\n                <option value={1}>Wind</option>\n              </Select>\n            </FormControl>\n          }\n          {(values.windOrCentral === '1' && !!values.ac) &&\n            <TextField\n              className={classes.quantity}\n              id=\"standard-number\"\n              label=\"Quantity\"\n              type=\"number\"\n              value={values.windowUnits}\n              onChange={handleFieldChange('windowUnits')}\n              InputLabelProps={{\n                shrink: true,\n              }}\n            />}\n          <br />\n          <FormControlLabel\n            control={\n              <Checkbox\n                checked={values.eeBulbs}\n                onChange={handleCheckChange('eeBulbs')}\n                color=\"secondary\"\n              />\n            }\n            label=\"Energy efficient light bulbs\"\n          />\n          <br />\n          <Grid>\n            <Button\n              className={classes.back}\n              color=\"primary\"\n              variant=\"contained\"\n              onClick={this.back}\n            >Back</Button>\n\n            <Button\n              color=\"secondary\"\n              variant=\"contained\"\n              onClick={this.continue}\n            >Continue</Button>\n          </Grid>\n\n        </Grid>\n      </MuiThemeProvider>\n    );\n  }\n}\n\nexport default withStyles(styles)(FormApplicanceInfo);","import React, { Component } from 'react';\nimport { createMuiTheme, ThemeProvider as MuiThemeProvider } from '@material-ui/core/styles';\nimport { withStyles } from '@material-ui/core/styles';\nimport blueGrey from '@material-ui/core/colors/blueGrey';\nimport green from '@material-ui/core/colors/green';\nimport { Typography } from '@material-ui/core';\nimport TextField from '@material-ui/core/TextField';\n\n\nconst theme = createMuiTheme({\n  palette: {\n    primary: {\n      main: blueGrey[50],\n    },\n    secondary: {\n      main: green[800],\n    },\n  },\n  spacing: 8\n});\n\nconst styles = {\n  question: {\n    height: 20,\n    fontFamily: \"sans-serif\",\n    fontWeight: 'bold',\n    fontSize: 18,\n    marginTop: 10,\n    marginBottom: 20\n  },\n  textBox: {\n    height: 120,\n    width: 300\n  },\n  options: {\n    height: 140,\n  },\n  shift: {\n    marginLeft: 20,\n    marginTop: 20\n  },\n  back: {\n      marginTop: -10,\n      marginRight: 10\n  }\n};\n\n\nexport class ApplianceUsageQuestion extends Component {\n\n  render() {\n    const { usage, handleChange, applianceName, applianceKey } = this.props;\n    const { classes } = this.props;\n\n    return (\n        <MuiThemeProvider theme= {theme}> \n            <Typography className={classes.question}>How many times do you use your {applianceName}(s) per week?</Typography>\n            \n            <TextField\n              id=\"standard-number\"\n              label=\"Number of uses\"\n              type=\"number\"\n              value={usage}\n              onChange={handleChange(applianceKey)}\n              InputLabelProps={{\n                shrink: true,\n              }}\n            />\n            <br />\n        </MuiThemeProvider>\n    );\n  }\n}\n\nexport default withStyles(styles)(ApplianceUsageQuestion);","import React, { Component } from 'react';\nimport RadioGroup from '@material-ui/core/RadioGroup';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport Radio from '@material-ui/core/Radio';\nimport { createMuiTheme, ThemeProvider as MuiThemeProvider } from '@material-ui/core/styles';\nimport { withStyles } from '@material-ui/core/styles';\nimport Button from '@material-ui/core/Button';\nimport TopBar from './TopBar';\nimport blueGrey from '@material-ui/core/colors/blueGrey';\nimport green from '@material-ui/core/colors/green';\nimport { Typography } from '@material-ui/core';\nimport TextField from '@material-ui/core/TextField';\nimport Grid from '@material-ui/core/Grid';\nimport ApplianceUsageQuestion from './ApplianceUsageQuestion';\n\n\nconst theme = createMuiTheme({\n  palette: {\n    primary: {\n      main: blueGrey[50],\n    },\n    secondary: {\n      main: green[800],\n    },\n  },\n  spacing: 8\n});\n\nconst styles = {\n  buttons: {\n    marginTop: 60\n  },\n  title: {\n    height: 80,\n    fontFamily: \"sans-serif\",\n    fontWeight: 50,\n    fontSize: 32,\n  },\n  subTitle: {\n    height: 60,\n    fontFamily: \"sans-serif\",\n    fontWeight: 30,\n    fontSize: 24,\n    color: '#2e7d32',\n  },\n  question: {\n    height: 20,\n    fontFamily: \"sans-serif\",\n    fontWeight: 'bold',\n    fontSize: 18,\n    marginTop: 10,\n    marginBottom: 20\n  },\n  textBox: {\n    height: 120,\n    width: 300\n  },\n  options: {\n    height: 140,\n  },\n  shift: {\n    marginLeft: 20,\n    marginTop: 20\n  },\n  back: {\n    marginTop: -10,\n    marginRight: 10\n  }\n};\n\n\nexport class FormApplianceInfo extends Component {\n  continue = e => {\n    e.preventDefault();\n    this.props.nextStep();\n  };\n\n  back = e => {\n    e.preventDefault();\n    this.props.prevStep();\n  };\n\n  render() {\n    const { values, handleChange } = this.props;\n    const { classes } = this.props;\n    return (\n      <MuiThemeProvider theme={theme}>\n        <TopBar />\n\n        <Grid className={classes.shift}>\n\n          <Typography className={classes.title}>Questionnaire</Typography>\n          <Typography className={classes.subTitle}>Appliance Usage</Typography>\n\n          {!!values.dishwasher &&\n            <ApplianceUsageQuestion\n              applianceName='dishwasher'\n              applianceKey='dishwasherUsage'\n              handleChange={handleChange}\n              usage={values.dishwasherUsage}\n            />\n          }\n          {!!values.stove &&\n            <ApplianceUsageQuestion\n              applianceName='stove'\n              applianceKey='stoveUsage'\n              handleChange={handleChange}\n              usage={values.stoveUsage}\n            />\n          }\n          {!!values.oven &&\n            <ApplianceUsageQuestion\n              applianceName='oven'\n              applianceKey='ovenUsage'\n              handleChange={handleChange}\n              usage={values.ovenUsage}\n            />\n          }\n\n          {!!values.washerDryer &&\n            <ApplianceUsageQuestion\n              applianceName='washer'\n              applianceKey='washerUsage'\n              handleChange={handleChange}\n              usage={values.washerUsage}\n            />\n          }\n          {!!values.washerDryer &&\n            <ApplianceUsageQuestion\n              applianceName='dryer'\n              applianceKey='dryerUsage'\n              handleChange={handleChange}\n              usage={values.dryerUsage}\n            />\n          }\n          {!!values.ac &&\n            <Typography className={classes.question}>In the summer, how many days a month do you use your air conditioner?</Typography>}\n\n          {!!values.ac &&\n            <TextField\n              className={classes.textBox}\n              placeholder=\"Days per month\"\n              label=\"Days per month\"\n              onChange={handleChange('acUsage')}\n              margin=\"normal\"\n              fullWidth\n            />\n          }\n\n          <Grid>\n            <Button\n              className={classes.back}\n              color=\"primary\"\n              variant=\"contained\"\n              onClick={this.back}\n            >Back</Button>\n\n            <Button\n              color=\"secondary\"\n              variant=\"contained\"\n              onClick={this.continue}\n            >Continue</Button>\n          </Grid>\n\n        </Grid>\n      </MuiThemeProvider>\n    );\n  }\n}\n\nexport default withStyles(styles)(FormApplianceInfo);","import React, { Component } from 'react';\nimport FormHousingInfo from './FormHousingInfo';\nimport FormApplianceInfo from './FormApplianceInfo';\nimport FormApplianceUsage from './FormApplianceUsage';\nimport Success from './Success';\nimport { Link } from 'react-router-dom';\nimport { Button } from '@material-ui/core';\n\nexport class UserForm extends Component {\n  state = {\n    step: 1,\n    location: '',\n    squareFootage: 0,\n    numberOfPeopleInHousehold: 0,\n    summerUsage: 0,\n    winterUsage: 0,\n    dishwasher: 0,\n    stove: 0,\n    oven: 0,\n    fridge: 0,\n    freezer: 0,\n    washerDryer: 0,\n    heat: 0,\n    ac: 0,\n    dishwasherUsage: 0,\n    stoveUsage: 0,\n    ovenUsage: 0,\n    washerUsage: 0,\n    dryerUsage: 0,\n    acUsage: 0,\n    windOrCentral: 0,\n    windowUnits: 0\n  };\n\n  // Proceed to next step\n  nextStep = () => {\n    const { step } = this.state;\n    this.setState({\n      step: step + 1\n    });\n  };\n\n  // Go back to prev step\n  prevStep = () => {\n    const { step } = this.state;\n    this.setState({\n      step: step - 1\n    });\n  };\n\n  // Handle fields change\n  handleFieldChange = input => e => {\n    this.setState({ [input]: e.target.type === 'number' ? parseInt(e.target.value) : e.target.value });\n    console.log(this.state)\n  };\n\n  // Handle checkbox change\n  handleCheckChange = input => e => {\n    if (this.state[input] === 0)\n      this.setState({ [input]: 1 });\n    else\n      this.setState({ [input]: 0 });\n  };\n\n  render() {\n    const { step } = this.state;\n    const { priority, location, squareFootage, monthlyUsage, dishwasher, stove, oven, fridge,\n      freezer, washerDryer, ac, heat, dishwasherUsage, stoveUsage, ovenUsage, secondFridge, secondFreezer,\n      washerUsage, dryerUsage, acUsage } = this.state;\n    const values = {\n      priority, location, squareFootage, monthlyUsage, dishwasher, stove, oven, fridge,\n      freezer, washerDryer, ac, heat, dishwasherUsage, stoveUsage, ovenUsage, secondFridge, secondFreezer,\n      washerUsage, dryerUsage, acUsage\n    };\n\n    switch (step) {\n      case 1:\n        return (\n          <FormHousingInfo\n            nextStep={this.nextStep}\n            handleChange={this.handleFieldChange}\n            values={values}\n          />\n\n        );\n      case 2:\n        return (\n          <FormApplianceInfo\n            nextStep={this.nextStep}\n            prevStep={this.prevStep}\n            handleCheckChange={this.handleCheckChange}\n            handleFieldChange={this.handleFieldChange}\n            values={values}\n          />\n        );\n      case 3:\n        if (values.dishwasher || values.stove || values.washerDryer || values.ac || values.fridge || values.freezer) {\n          return (\n            <FormApplianceUsage\n              nextStep={this.nextStep}\n              prevStep={this.prevStep}\n              handleChange={this.handleFieldChange}\n              values={values}\n            />\n          )\n        };\n        return <Link to={{ pathname: \"/performance\", state: { response: this.state } }}>\n          <Button\n            color=\"secondary\"\n            variant=\"contained\"\n            onClick={this.continue}\n          >Continue</Button>\n        </Link>\n      case 4:\n        return <Link to={{ pathname: \"/performance\", state: { response: this.state } }}>\n          <Button\n            color=\"secondary\"\n            variant=\"contained\"\n            onClick={this.continue}\n          >Get recommendations</Button>\n        </Link>\n      default:\n        (console.log('This is a multi-step form built with React.'))\n    }\n  }\n}\n\nexport default UserForm;","import React, { Component } from 'react';\nimport Dialog from '@material-ui/core/Dialog';\nimport AppBar from '@material-ui/core/AppBar';\nimport { ThemeProvider as MuiThemeProvider } from '@material-ui/core/styles';\n\nexport class Success extends Component {\n  continue = e => {\n    e.preventDefault();\n    // PROCESS FORM //\n    this.props.nextStep();\n  };\n\n  back = e => {\n    e.preventDefault();\n    this.props.prevStep();\n  };\n\n  render() {\n    return (\n      <MuiThemeProvider>\n        <>\n          <Dialog\n            open\n            fullWidth\n            maxWidth='sm'\n          >\n            <AppBar title=\"Success\" />\n            <h1>Thank You For Your Submission</h1>\n            <p>You will get an email with further instructions.</p>\n          </Dialog>\n        </>\n      </MuiThemeProvider>\n    );\n  }\n}\n\nexport default Success;","// @flow\n\nimport Airtable from \"airtable\";\nimport React from 'react';\nimport { useEffect, useState } from \"react\";\nconst API_KEY: string = process.env.REACT_APP_AIRTABLE_KEY || \"\";\n\nexport const AirtableTest = (): React$Element<\"div\"> => {\n  const [records: Array< { [key: string]: any } >, setRecords: (Array<{ [key: string]: any }>) => void] = useState([]);\n\nuseEffect(() => {\n  var base = new Airtable({ apiKey: API_KEY }).base('appV6oQxcgRYsx3Wf');\n\n  base('Recipes')\n    .select()\n    .all()\n    .then((result: Array<{ [key: string]: any }>): void => {\n      setRecords(result);\n    })\n}, [])\nreturn <div>\n  <h1>{API_KEY}</h1>\n  <pre>{JSON.stringify(records, null, 2)}</pre>\n</div>\n}\n\nexport default AirtableTest;","// @flow\n\nimport * as React from 'react';\nimport C3Chart from 'react-c3js';\nimport 'c3/c3.css';\n\nexport const UsageGraph = (props: { data: { [any]: number[] }, axis: number[] }): React.Node => {\n  let { data, axis } = props;\n\n  let cols = [['x'].concat(axis)];\n\n  for (const [device, usage] of Object.entries(data)) {\n    cols.push([device].concat(usage));\n  }\n\n  let ticks = [];\n  for (let i = 0; i < 60 * 24; i += 60) {\n    ticks.push(i * 1000 * 60);\n  }\n\n  return (\n    <C3Chart\n      data={{\n        x: 'x',\n        xFormat: '%H:%M:%S',\n        columns: cols,\n        type: 'area',\n        groups: [[...Object.keys(data)]],\n        order: 'desc',\n      }}\n      interaction={{\n        enabled: false\n      }}\n      transition={{\n        duration: 0\n      }}\n      point={{\n        show: false\n      }}\n      axis={{\n        x: {\n          type: 'timeseries',\n          localtime: false,\n          tick: {\n            values: ticks,\n            format: \"%H\",\n          },\n          padding: { left: 0 }\n        },\n        y: {\n          min: 0,\n          padding: 0,\n        },\n      }}\n    />\n  )\n\n}\n\nexport default UsageGraph;","// @flow\n\nimport type { Device } from './types';\n\nexport const DEVICE_NAMES: Device[] = [\"dishwasher\", \"stove\", \"oven\", \"washer\",\n  \"dryer\", \"heat\", \"ac\", \"fridge\", \"freezer\", \"secondFridge\", \"secondFreezer\"]\n\nexport const DEVICE_DAILY_FREQ: { [Device]: number } = {\n  \"dishwasher\": 1,\n  \"stove\": 1,\n  \"oven\": 0.45,\n  \"washer\": 0.36,\n  \"dryer\": 0.25,\n  \"heat\": 3,\n  \"ac\": 1.5,\n  \"fridge\": 40,\n  \"freezer\": 5,\n  \"secondFridge\": 40,\n  \"secondFreezer\": 5,\n  // \"microwave\": 5,\n  // \"tv\": 1.62,\n  // \"hair dryer\": 1.5,\n}\n\nexport const DEVICE_CYCLE_LENGTH: { [Device]: number } = {\n  \"dishwasher\": 75,\n  \"stove\": 12,\n  \"oven\": 30,\n  \"washer\": 55,\n  \"dryer\": 75,\n  \"heat\": 15,\n  \"ac\": 120,\n  \"fridge\": 12,\n  \"freezer\": 10,\n  \"secondFridge\": 12,\n  \"secondFreezer\": 10,\n}\n\nexport const DEVICE_WATTAGE: { [Device]: number } = {\n  \"dishwasher\": 1140,\n  \"stove\": 2000,\n  \"oven\": 3000,\n  \"washer\": 1200,\n  \"dryer\": 5000,\n  \"heat\": 1000,\n  \"ac\": 1300,\n  \"fridge\": 110,\n  \"freezer\": 150,\n  \"secondFridge\": 90,\n  \"secondFreezer\": 80,\n}\n\nexport const HOURLY_PATTERNS = {\n  \"meals\": [\n    0.01, 0.005, 0.005, 0.005, 0.005, 0.01,\n    0.03, 0.06, 0.07, 0.06, 0.04, 0.075,\n    0.08, 0.07, 0.06, 0.02, 0.03, 0.05,\n    0.08, 0.1, 0.08, 0.04, 0.01, 0.005\n  ],\n}\n\nexport const OUTAGES = {\n  \"short\": 15,\n  \"medium\": 60,\n  \"long\": 180\n}","// @flow\n\nimport { DEVICE_CYCLE_LENGTH, DEVICE_DAILY_FREQ, DEVICE_NAMES, DEVICE_WATTAGE } from \"./data\";\nimport type { QuestionnaireResponse, Model, ModelParams, DeviceDefinition } from './types'\n\n// parses questionnaire and params into a list of devices to simulate\n// result should be passed to generate_model\nexport function get_devices(questionnaire: QuestionnaireResponse, params: ModelParams): DeviceDefinition[] {\n  let devices = [...questionnaire.additionalDevices];\n\n  for (let name of DEVICE_NAMES) {\n    // special cases\n    if (name === \"ac\" && !params.summer) {\n      continue;\n    } else if (name === \"heat\" && params.summer) {\n      continue;\n    }\n\n    devices.push({\n      name: name,\n      freq: DEVICE_DAILY_FREQ[name],\n      cycle_length: DEVICE_CYCLE_LENGTH[name],\n      wattage: DEVICE_WATTAGE[name],\n      pattern: null\n    })\n  }\n\n  // lights\n  for (let i = 0; i < questionnaire.residents; i++) {\n    devices.push({\n      name: `lights${i}`,\n      freq: 6,\n      cycle_length: 1,\n      wattage: questionnaire.efficientLights ? 20 : 100,\n      pattern: null,\n    })\n  }\n\n  return devices;\n}\n\nfunction init_device_cycles(devices: DeviceDefinition[]): { [string]: number } {\n  let device_cycles = {};\n  for (let device of devices) {\n    device_cycles[device.name] = 0;\n  }\n\n  return device_cycles\n}\n\n// generates a demand model over the course of a day\nexport function generate_model(devices: DeviceDefinition[], daily_target_demand: number): Model {\n  // Number of ticks to use\n  let minutes = 60 * 24;\n\n  // Total demand at each tick\n  let total_demand: number[] = Array(minutes).fill(0);\n  let device_demand: { [string]: number[] } = {};\n  for (const device of devices) {\n    device_demand[device.name] = [...total_demand];\n  }\n\n  // Track cycle progression for each device, indicates remaining ticks\n  let device_cycles = init_device_cycles(devices);\n\n  for (let i = 0; i < minutes; i++) {\n    for (const device of devices) {\n      if (device_cycles[device.name] > 0) {\n        // Decrement cycle length and add wattage to demand\n        device_cycles[device.name]--;\n\n        total_demand[i] += device.wattage\n        device_demand[device.name][i] += device.wattage\n      } else {\n        // Start a new cycle if random value is above threshold\n        let threshold = device.freq / minutes;\n        if (Math.random() < threshold) {\n          device_cycles[device.name] = device.cycle_length\n        }\n      }\n    }\n  }\n\n  // Scale demand to match actual amount\n\n  // Divide by 60 to convert watt-minutes to watt-hours\n  let daily_actual_demand = total_demand.reduce((a, b) => a + b, 0) / 60;\n\n  // Scale values to match power bill\n  let scaling_factor = daily_target_demand / daily_actual_demand;\n  total_demand = total_demand.map((watts) => watts * scaling_factor);\n  for (let device of devices) {\n    device_demand[device.name] = device_demand[device.name].map((watts) => watts * scaling_factor)\n  }\n\n  return { total_demand, device_demand };\n}\n\nexport function generate_timestamps(): number[] {\n  let timestamps = [];\n  for (let i = 0; i < 24 * 60; i++) {\n    timestamps.push(i * 60 * 1000);\n  }\n\n  return timestamps;\n}\n","import type { Model, Outage, SimulatorResult } from './types'\n\nexport function simulate_outage(model: Model, outage: Outage): SimulatorResult {\n  let result = {\n    peak_demand: 0,\n    total_demand: 0\n  }\n\n  for (let minute = outage.start; minute < outage.end; minute++) {\n    result.total_demand += model.total_demand[minute] / 60; // convert to watt-hours\n    result.peak_demand = Math.max(result.peak_demand, model.total_demand[minute]);\n  }\n\n  return result;\n}","// @flow\n\nimport { Button } from '@material-ui/core';\nimport * as React from 'react';\nimport { useEffect, useState } from \"react\";\nimport UsageGraph from '../Components/UsageGraph';\nimport { generate_model, generate_timestamps, get_devices } from '../lib/model';\nimport { simulate_outage } from '../lib/simulator';\nimport type { Model, ModelParams, QuestionnaireResponse } from '../lib/types'\n\nexport const GraphTest = (): React.Node => {\n  let [totalDemand: { [string]: number[]}, setTotalDemand] = useState({});\n  let [deviceDemand: { [string]: number[]}, setDeviceDemand] = useState({});\n  let [axis, setAxis] = useState([]);\n  let [showDevices, setShowDevices] = useState(false);\n\n  useEffect(() => {\n    let questionnaire: QuestionnaireResponse = {\n      location: \"Canada\",\n      squareFootage: 450,\n      residents: 4,\n      efficientLights: true,\n      monthlySummerUsage: 600,\n      monthlyWinterUsage: 800,\n      dishwasher: true,\n      stove: true,\n      oven: true,\n      washer: true,\n      dryer: true,\n      heat: true,\n      ac: true,\n      fridge: true,\n      freezer: true,\n      secondFridge: true,\n      secondFreezer: true,\n      dishwasherUsage: 2,\n      stoveUsage: 2,\n      ovenUsage: 2,\n      washerUsage: 2,\n      dryerUsage: 2,\n      acUsage: 15,\n      additionalDevices: [],\n    }\n    let params: ModelParams = { summer: true };\n    let devices = get_devices(questionnaire, params)\n    let daily_target_demand = (params.summer\n      ? questionnaire.monthlySummerUsage\n      : questionnaire.monthlyWinterUsage)\n      * 1000 // kWh to Wh\n      / 30.5; // monthly -> daily\n    let model: Model = generate_model(devices, daily_target_demand);\n\n    setTotalDemand({ total: model.total_demand });\n    setDeviceDemand(model.device_demand);\n    setAxis(generate_timestamps());\n\n    console.log(simulate_outage(model, { start: 60, end: 120 }));\n  }, [])\n\n  if (showDevices) {\n    return <div key=\"show\">\n      <UsageGraph data={deviceDemand} axis={axis} />\n      <Button variant=\"contained\" onClick={() => setShowDevices(false)}>Hide devices</Button>\n    </div>\n  } else {\n    return <div key=\"hide\">\n      <UsageGraph data={totalDemand} axis={axis} />\n      <Button variant=\"contained\" onClick={() => setShowDevices(true)}>Show devices</Button>\n    </div>\n  }\n}\n\nexport default GraphTest;","// @flow\n\nimport * as React from 'react';\nimport C3Chart from 'react-c3js';\nimport 'c3/c3.css';\n\nexport const PerformanceGraph = (props: { data: { [string]: number[] }, outages: string[] }): React.Node => {\n  let { data, outages } = props;\n\n  let cols = Object.entries(data).map(([solution, result]) => [solution].concat(result))\n\n  return (\n    <C3Chart\n      data={{\n        columns: cols,\n        type: \"bar\",\n      }}\n      axis={{\n        x: {\n          label: {\n            text: \"Outage time period\",\n            position: \"outer-center\",\n          },\n          type: \"category\",\n          categories: outages\n        },\n        y: {\n          label: {\n            text: \"Outages prevented\",\n            position: \"outer-center\",\n          }\n        }\n      }}\n      bar={{\n        width: {\n          ratio: 0.5\n        }\n      }}\n    />\n  )\n\n}\n\nexport default PerformanceGraph;","// @flow\n\nimport * as React from 'react';\nimport C3Chart from 'react-c3js';\nimport 'c3/c3.css';\nimport type { RecommendationPerformance } from \"../lib/types\"\n\nexport const SingleRecommendationGraph = (props: { data: RecommendationPerformance }): React.Node => {\n  let { data } = props;\n  let cols = [];\n  return Object.entries(data).map(([k, v]) => {\n    return <C3Chart\n      data={{\n        columns: [[k].concat(v)],\n        type: \"bar\",\n        color: (color, d) => [null, \"red\", \"orange\", \"yellow\", \"green\"][d.value]\n      }}\n      legend={{ show: false }}\n      bar={{\n        width: {\n          ratio: 1\n        }\n      }}\n      size={{\n        height: 64,\n      }}\n    />\n  })\n}\n\nexport default SingleRecommendationGraph;","import { simulate_outage } from './simulator';\nimport type { Model, Outage, RecommendationPerformance, SimulatorResult, StorageSolution as StorageRec } from './types'\n\nexport function assess_recommendation(\n  rec: StorageRec,\n  models: Model[],\n  outages: { [string]: Outage }): RecommendationPerformance {\n  // Runs each outage type on each model. \n  // Returns the success or failure on each model for each outage.\n  // Maps outage name to an array of results: 1 (red) for charge and capacity failure,\n  // 2 (orange) for charge failure, 3 (yellow) for capacity failure, 4 (green) for all good\n\n  let perf: RecommendationPerformance = {};\n  for (let [name, length] of Object.entries(outages)) {\n    perf[name] = [];\n    for (let model of models) {\n      // randomize start time\n      let start_time = Math.floor(Math.random() * Math.floor(60 * 24 - length));\n      let sim_result = simulate_outage(model, {\n        start: start_time,\n        end: start_time + length\n      });\n\n      if (sim_result.peak_demand > rec.peak_discharge && sim_result.total_demand > rec.capacity) {\n        perf[name].push(1);\n      } else if (sim_result.peak_demand > rec.peak_discharge) {\n        perf[name].push(2);\n      } else if (sim_result.total_demand > rec.capacity) {\n        perf[name].push(3);\n      } else {\n        perf[name].push(4);\n      }\n    }\n  }\n\n  return perf;\n}","// @flow\nimport * as React from 'react';\nimport { useEffect, useState } from \"react\";\nimport PerformanceGraph from '../Components/PerformanceGraph';\nimport SingleRecommendationGraph from '../Components/SingleRecommendationGraph';\nimport { OUTAGES } from '../lib/data';\nimport { generate_model, get_devices } from '../lib/model';\nimport { assess_recommendation } from '../lib/recommender';\nimport { simulate_outage } from '../lib/simulator';\nimport type { Model, ModelParams, QuestionnaireResponse } from '../lib/types'\n\nexport const PerformanceTest = (props: {\n  location: {\n    state: {\n      response: QuestionnaireResponse\n    }\n  }\n}): React.Node => {\n  // let { response } = props.location.state;\n  // console.log(props);\n  let response = {\n    location: \"Canada\",\n    squareFootage: 450,\n    residents: 4,\n    efficientLights: true,\n    monthlySummerUsage: 600,\n    monthlyWinterUsage: 800,\n    dishwasher: true,\n    stove: true,\n    oven: true,\n    washer: true,\n    dryer: true,\n    heat: true,\n    ac: true,\n    fridge: true,\n    freezer: true,\n    secondFridge: true,\n    secondFreezer: true,\n    dishwasherUsage: 2,\n    stoveUsage: 2,\n    ovenUsage: 2,\n    washerUsage: 2,\n    dryerUsage: 2,\n    acUsage: 15,\n    additionalDevices: [],\n  };\n  let [data, setData] = useState({});\n  let [outages, setOutages] = useState({\n    \"6-6:15\": {\n      start: 360,\n      end: 375,\n    },\n    \"11:30-11:45\": {\n      start: 690,\n      end: 705,\n    },\n    \"20:45-21:00\": {\n      start: 1245,\n      end: 1260,\n    },\n    \"6-6:45\": {\n      start: 360,\n      end: 405,\n    },\n    \"11:30-12:15\": {\n      start: 690,\n      end: 735,\n    },\n    \"20:45-21:30\": {\n      start: 1245,\n      end: 1290,\n    },\n    \"6-9\": {\n      start: 360,\n      end: 540,\n    },\n    \"11:30-14:30\": {\n      start: 690,\n      end: 870,\n    },\n    \"20:45-23:45\": {\n      start: 1245,\n      end: 1425,\n    }\n  });\n  let [recommendations, useRecommendations] = useState([\n    {\n      name: \"nothing\",\n      capacity: 0,\n      peak_discharge: 0,\n    },\n    {\n      name: \"sonnen eco small\",\n      capacity: 5000,\n      peak_discharge: 3000,\n    },\n    {\n      name: \"powerwall\",\n      capacity: 8000,\n      peak_discharge: 5000,\n    },\n  ]);\n  let [models, setModels] = useState(() => {\n    let _models: Model[] = []; // generate ten models\n    for (let i = 0; i < 90; i++) {\n      let questionnaire: QuestionnaireResponse = response;\n      let params: ModelParams = { summer: true };\n      let devices = get_devices(questionnaire, params)\n      let daily_target_demand = (params.summer\n        ? questionnaire.monthlySummerUsage\n        : questionnaire.monthlyWinterUsage)\n        * 1000\n        / 30.5;\n      _models.push(generate_model(devices, daily_target_demand));\n    }\n    return _models;\n  })\n\n  useEffect(() => {\n\n\n    let perf_data = {};\n    let rec_data = {};\n\n    for (let rec of recommendations) {\n      perf_data[rec.name] = [];\n\n      for (let [outage_name, outage] of Object.entries(outages)) {\n        let total = 0;\n        for (let model of models) {\n          let result = simulate_outage(model, outage);\n          if (rec.capacity < result.total_demand || rec.peak_discharge < result.peak_demand) {\n            total++;\n          }\n        }\n\n        perf_data[rec.name].push(30 - total);\n      }\n    }\n\n    setData(perf_data);\n  }, [])\n\n  return <>\n    <h2>Outages prevented (out of 30) per recommendation and outage type</h2>\n    <PerformanceGraph data={data} outages={Object.keys(outages)} />\n    {recommendations.map(rec => <>\n      <h3>Recommendation {rec.name}</h3>\n      <SingleRecommendationGraph data={assess_recommendation(rec, models, OUTAGES)} />\n    </>)}\n\n  </>\n}\n\nexport default PerformanceTest;","// @flow\n\nimport * as React from 'react';\nimport { useEffect, useState } from \"react\";\nimport { generate_model, get_devices } from '../lib/model';\nimport type { QuestionnaireResponse, ModelParams, Model } from '../lib/types';\n\nexport const SimulatorTest = (): React.Node => {\n  let [done, setDone] = useState(false)\n  useEffect(() => {\n    // Generate 20 models\n    let start = new Date();\n    for (let i = 0; i < 20; i++) {\n      let questionnaire: QuestionnaireResponse = {\n        location: \"Canada\",\n        squareFootage: 450,\n        residents: 4,\n        efficientLights: true,\n        monthlySummerUsage: 600,\n        monthlyWinterUsage: 800,\n        dishwasher: true,\n        stove: true,\n        oven: true,\n        washer: true,\n        dryer: true,\n        heat: true,\n        ac: true,\n        fridge: true,\n        freezer: true,\n        secondFridge: true,\n        secondFreezer: true,\n        dishwasherUsage: 2,\n        stoveUsage: 2,\n        ovenUsage: 2,\n        washerUsage: 2,\n        dryerUsage: 2,\n        acUsage: 15,\n        additionalDevices: [],\n      }\n      let params: ModelParams = { summer: true };\n      let devices = get_devices(questionnaire, params)\n      let daily_target_demand = (params.summer\n        ? questionnaire.monthlySummerUsage\n        : questionnaire.monthlyWinterUsage)\n        * 1000 // kWh to Wh\n        / 30.5; // monthly -> daily\n      let model: Model = generate_model(devices, daily_target_demand);\n    }\n    setDone(new Date().getTime() - start.getTime());\n  }, [])\n\n  return <div>{done}ms to generate 20 models</div>\n}\n\nexport default SimulatorTest;","import React from 'react';\nimport { HashRouter, Route, Switch } from 'react-router-dom';\nimport { UserForm } from './Components/UserForm';\nimport { AirtableTest } from './Pages/AirtableTest';\nimport GraphTest from './Pages/GraphTest';\nimport PerformanceTest from './Pages/PerformanceTest';\nimport SimulatorTest from './Pages/SimulatorTest';\n\nconst App = () => {\n  return (\n    <div className=\"App\">\n      <HashRouter>\n        <Switch>\n          <Route exact path=\"/\" component={UserForm}></Route>\n          <Route path=\"/airtable\" component={AirtableTest}></Route>\n          <Route path=\"/graph\" component={GraphTest}></Route>\n          <Route path=\"/simulator\" component={SimulatorTest}></Route>\n          <Route path=\"/performance\" component={PerformanceTest}></Route>\n        </Switch>\n      </HashRouter>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}