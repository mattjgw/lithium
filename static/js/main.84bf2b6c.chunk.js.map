{"version":3,"sources":["Pages/NotFoundPage.js","Components/SingleRecommendationGraph.js","Components/RecommendationPanel.js","Components/TopBar.js","lib/data.js","lib/model.js","lib/simulator.js","lib/recommender.js","Pages/RecommendationsPage.js","Components/UsageGraph.js","Pages/test/GraphTest.js","Components/FormApplianceInfo.js","Components/ApplianceUsageQuestion.js","Components/FormApplianceUsage.js","Components/FormHousingInfo.js","Components/Success.js","Pages/UserForm.js","Images/homescreen.png","Pages/HomePage.js","App.js","reportWebVitals.js","index.js"],"names":["NotFoundPage","Dialog","open","fullWidth","maxWidth","AppBar","title","SingleRecommendationGraph","props","data","k","sort","Object","entries","map","v","columns","concat","type","color","d","value","legend","show","bar","width","ratio","size","height","axis","x","y","text","RecommendationPanel","panel","classes","Grid","item","xs","md","Card","CardHeader","subheader","titleTypographyProps","align","subheaderTypographyProps","action","className","cardHeader","CardContent","cardPricing","Typography","component","variant","cost","Math","round","output","capacity","description","line","CardActions","Button","buttonVariant","buttonText","perf","TopBar","continue","e","preventDefault","nextStep","back","prevStep","position","Toolbar","to","pathname","style","textDecoration","Component","DEVICE_NAMES","DEVICE_DAILY_FREQ","DEVICE_CYCLE_LENGTH","DEVICE_WATTAGE","DEVICE_PATTERNS","HOURLY_PATTERNS","OUTAGES","EXAMPLE_RESPONSE","STORAGE_DEVICES","name","peak_discharge","get_devices","questionnaire","params","devices","additionalDevices","summer","random","acUsage","windowUnits","i","push","freq","cycle_length","wattage","squareFootage","pattern","numberOfPeopleInHousehold","eeBulbs","generate_model","daily_target_demand","minutes","total_demand","Array","fill","device_demand","device_cycles","init_device_cycles","device","threshold","pattern_name","undefined","hour","floor","scaling_factor","reduce","a","b","watts","simulate_outage","model","outage","result","peak_demand","minute","start","end","max","assess_recommendation","rec","models","outages","length","start_time","sim_result","useStyles","makeStyles","theme","ul","margin","padding","listStyle","appBar","borderBottom","palette","divider","toolbar","flexWrap","toolbarTitle","flexGrow","link","spacing","heroContent","backgroundColor","grey","display","justifyContent","alignItems","marginBottom","footer","borderTop","marginTop","paddingTop","paddingBottom","breakpoints","up","RecommendationsPage","response","location","state","localStorage","setItem","JSON","stringify","getItem","parse","console","log","useState","panels","setPanels","useEffect","m","summer_devices","winter_devices","M","summerUsage","winterUsage","_panels","keys","brand","recommendation","percentages","successes","percentage","percentages_list","values","CssBaseline","Container","gutterBottom","container","UsageGraph","cols","usage","ticks","xFormat","groups","order","interaction","enabled","transition","duration","point","localtime","tick","format","left","min","GraphTest","totalDemand","setTotalDemand","deviceDemand","setDeviceDemand","setAxis","showDevices","setShowDevices","total","timestamps","generate_timestamps","onClick","FormApplianceInfo","this","handleCheckChange","handleFieldChange","shift","subTitle","question","FormControlLabel","control","Checkbox","checked","dishwasher","onChange","label","TextField","quantity","InputProps","inputProps","id","InputLabelProps","shrink","stove","oven","fridge","freezer","washer","dryer","heat","ac","FormControl","windowOrCentral","InputLabel","htmlFor","Select","native","withStyles","buttons","fontFamily","fontWeight","fontSize","textBox","options","marginLeft","marginRight","ApplianceUsageQuestion","handleChange","applianceName","applianceKey","plural","FormApplianceUsage","dishwasherUsage","stoveUsage","ovenUsage","washerUsage","dryerUsage","placeholder","FormPriority","Tooltip","placement","arrow","aria-label","Success","UserForm","step","setState","input","target","parseInt","priority","monthlyUsage","secondFridge","secondFreezer","innerForm","FormHousingInfo","createMuiTheme","primary","main","blueGrey","secondary","green","HomePage","flex","subtitle","subtitle2","image","src","homescreen","alt","App","exact","path","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.84bf2b6c.chunk.js","sourcesContent":["// @flow\n\nimport { AppBar, Dialog, MuiThemeProvider } from \"@material-ui/core\";\nimport React from 'react';\n\nexport const NotFoundPage = (): React$Element<\"div\"> => {\n\n  return <MuiThemeProvider>\n    <>\n      <Dialog\n        open\n        fullWidth\n        maxWidth='sm'\n      >\n        <AppBar title=\"Error\" />\n        <h1>Page not found</h1>\n      </Dialog>\n    </>\n  </MuiThemeProvider>\n}\n\nexport default NotFoundPage;","// @flow\n\nimport * as React from 'react';\nimport C3Chart from 'react-c3js';\nimport 'c3/c3.css';\nimport type { RecommendationPerformance } from \"../lib/types\"\n\nexport const SingleRecommendationGraph = (props: { data: RecommendationPerformance }): React.Node => {\n  let { data } = props;\n  for (let k in data) {\n    data[k].sort();\n  }\n\n  return Object.entries(data).map(([k, v]) => {\n    return <C3Chart\n      data={{\n        columns: [[k].concat(v)],\n        type: \"bar\",\n        color: (color, d) => [null, \"red\", \"orange\", \"yellow\", \"green\"][d.value]\n      }}\n      legend={{ show: false }}\n      bar={{\n        width: {\n          ratio: 1\n        }\n      }}\n      size={{\n        height: 48,\n      }}\n      axis={{\n        x: {\n          show: false,\n        },\n        y: {\n          show: false,\n        }\n      }}\n      title={{\n        text: k\n      }}\n    />\n  })\n}\n\nexport default SingleRecommendationGraph;","// @flow\n\nimport Button from '@material-ui/core/Button';\nimport Card from '@material-ui/core/Card';\nimport CardActions from '@material-ui/core/CardActions';\nimport CardContent from '@material-ui/core/CardContent';\nimport CardHeader from '@material-ui/core/CardHeader';\nimport Grid from '@material-ui/core/Grid';\nimport Typography from '@material-ui/core/Typography';\nimport StarIcon from '@material-ui/icons/StarBorder';\nimport React from 'react';\nimport { SingleRecommendationGraph } from '../Components/SingleRecommendationGraph';\n\n\nexport const RecommendationPanel = (props: {\n  panel: any,\n  classes: any,\n}): React$Element<\"div\"> => {\n  let { panel, classes } = props;\n  return <Grid item key={panel.title} xs={12} md={3}>\n    <Card>\n      <CardHeader\n        title={panel.title}\n        subheader={panel.subheader}\n        titleTypographyProps={{ align: 'center' }}\n        subheaderTypographyProps={{ align: 'center' }}\n        action={panel.title === 'Tesla Powerwall' ? <StarIcon /> : null}\n        className={classes.cardHeader}\n      />\n      <CardContent>\n        <div className={classes.cardPricing}>\n          <Typography component=\"h6\" variant=\"h6\" color=\"textPrimary\">\n            {panel.type}\n          </Typography>\n        </div>\n        <div className={classes.cardPricing}>\n          <Typography variant=\"h4\" color=\"textSecondary\">\n            $\n          </Typography>\n          <Typography component=\"h2\" variant=\"h3\" color=\"textPrimary\">\n            {panel.cost}\n          </Typography>\n\n        </div>\n        <div className={classes.cardPricing}>\n          <Typography component=\"h4\" variant=\"h4\" color=\"textPrimary\">\n            {Math.round(panel.output / 100) / 10}\n          </Typography>\n          <Typography variant=\"h6\" color=\"textSecondary\">\n            kW output\n          </Typography>\n        </div>\n        {panel.capacity > 0 && <div className={classes.cardPricing}>\n          <Typography component=\"h4\" variant=\"h4\" color=\"textPrimary\">\n            {Math.round(panel.capacity / 100) / 10}\n          </Typography>\n          <Typography variant=\"h6\" color=\"textSecondary\">\n            kWh capacity\n          </Typography>\n        </div>}\n        <ul>\n          {panel.description.map((line) => (\n            <Typography component=\"li\" variant=\"subtitle1\" align=\"center\" key={line}>\n              {line}\n            </Typography>\n          ))}\n        </ul>\n      </CardContent>\n      <CardActions>\n        <Button fullWidth variant={panel.buttonVariant} color=\"secondary\">\n          {panel.buttonText}\n        </Button>\n      </CardActions>\n      <SingleRecommendationGraph data={panel.perf} />\n    </Card>\n  </Grid>\n}\n\nexport default RecommendationPanel;","import React, { Component } from 'react';\nimport AppBar from '@material-ui/core/AppBar';\nimport Toolbar from '@material-ui/core/Toolbar'\nimport Typography from '@material-ui/core/Typography';\nimport Button from '@material-ui/core/Button';\nimport { Link } from 'react-router-dom';\n\nexport class TopBar extends Component {\n  continue = e => {\n    e.preventDefault();\n    this.props.nextStep();\n  };\n\n  back = e => {\n    e.preventDefault();\n    this.props.prevStep();\n  };\n\n  render() {\n    return (\n      <AppBar position=\"static\" color=\"primary\" >\n        <Toolbar>\n        <Link to={{ pathname: \"/\" }} style={{ textDecoration: 'none', color: 'black' }}>\n          <Typography variant=\"h6\">\n            Lithium\n          </Typography>\n        </Link>\n        </Toolbar>\n      </AppBar>\n    );\n  }\n}\n\nexport default TopBar;","// @flow\n\nimport type { Device, QuestionnaireResponse, StorageSolution } from './types';\n\n// defined devices that we know the duty cycle and wattages of\nexport const DEVICE_NAMES: Device[] = [\"dishwasher\", \"stove\", \"oven\", \"washer\",\n  \"dryer\", \"heat\", \"ac\", \"fridge\", \"freezer\"]\n\nexport const DEVICE_DAILY_FREQ: { [Device]: number } = {\n  \"dishwasher\": 1,\n  \"stove\": 1,\n  \"oven\": 0.45,\n  \"washer\": 0.36,\n  \"dryer\": 0.25,\n  \"heat\": 4,\n  \"ac\": 20,\n  \"fridge\": 40,\n  \"freezer\": 5,\n}\n\nexport const DEVICE_CYCLE_LENGTH: { [Device]: number } = {\n  \"dishwasher\": 75,\n  \"stove\": 12,\n  \"oven\": 30,\n  \"washer\": 55,\n  \"dryer\": 75,\n  \"heat\": 30,\n  \"ac\": 20,\n  \"fridge\": 12,\n  \"freezer\": 10,\n}\n\nexport const DEVICE_WATTAGE: { [Device]: number } = {\n  \"dishwasher\": 1140,\n  \"stove\": 2000,\n  \"oven\": 3000,\n  \"washer\": 1200,\n  \"dryer\": 5000,\n  \"heat\": 1000,\n  \"ac\": 1300,\n  \"fridge\": 110,\n  \"freezer\": 150,\n}\n\nexport const DEVICE_PATTERNS = {\n  \"dishwasher\": \"meals\",\n  \"stove\": \"meals\",\n  \"oven\": \"meals\",\n}\n\nexport const HOURLY_PATTERNS = {\n  \"meals\": [\n    0.01, 0.005, 0.005, 0.005, 0.005, 0.01,\n    0.03, 0.06, 0.07, 0.06, 0.04, 0.075,\n    0.08, 0.07, 0.06, 0.02, 0.03, 0.05,\n    0.08, 0.1, 0.08, 0.04, 0.01, 0.005\n  ],\n}\n\nexport const OUTAGES = [\n  15,\n  60,\n  180\n]\n\nexport const EXAMPLE_RESPONSE: QuestionnaireResponse = {\n  \"location\": \"ON\",\n  \"squareFootage\": 1000,\n  \"numberOfPeopleInHousehold\": 4,\n  \"summerUsage\": 800,\n  \"winterUsage\": 600,\n  \"dishwasher\": 1,\n  \"stove\": 1,\n  \"oven\": 0,\n  \"fridge\": 1,\n  \"freezer\": 1,\n  \"washer\": 1,\n  \"dryer\": 1,\n  \"heat\": 1,\n  \"ac\": 0,\n  \"dishwasherUsage\": 7,\n  \"stoveUsage\": 20,\n  \"ovenUsage\": 5,\n  \"washerUsage\": 3,\n  \"dryerUsage\": 2,\n  \"acUsage\": 15,\n  \"windowOrCentral\": 0,\n  \"windowUnits\": 0,\n  \"eeBulbs\": true,\n  \"additionalDevices\": []\n}\n\nexport const STORAGE_DEVICES: { [string]: StorageSolution[] } = {\n  \"Tesla\": [\n    {\n      name: \"Powerwall\",\n      type: \"Home battery\",\n      capacity: 13500,\n      peak_discharge: 5800,\n      cost: 12000,\n    },\n    {\n      name: \"2x Powerwall\",\n      type: \"Home battery\",\n      capacity: 13500 * 2,\n      peak_discharge: 5800 * 2,\n      cost: 12000 * 2,\n    },\n    {\n      name: \"3x Powerwall\",\n      type: \"Home battery\",\n      capacity: 13500 * 3,\n      peak_discharge: 5800 * 3,\n      cost: 12000 * 3,\n    },\n    {\n      name: \"4x Powerwall\",\n      type: \"Home battery\",\n      capacity: 13500 * 4,\n      peak_discharge: 5800 * 4,\n      cost: 12000 * 4,\n    },\n  ],\n  \"Orison\": [\n    {\n      name: \"Panel\",\n      type: \"Home battery\",\n      capacity: 2200,\n      peak_discharge: 1800,\n      cost: 2200,\n    },\n    {\n      name: \"Panel and Panel+\",\n      type: \"Home battery\",\n      capacity: 2200 * 2,\n      peak_discharge: 1800 * 2,\n      cost: 2200 + 1600,\n    },\n    {\n      name: \"Panel and 2x Panel+\",\n      type: \"Home battery\",\n      capacity: 2200 * 3,\n      peak_discharge: 1800 * 3,\n      cost: 2200 + 1600 * 2,\n    },\n    {\n      name: \"Panel and 3x Panel+\",\n      type: \"Home battery\",\n      capacity: 2200 * 4,\n      peak_discharge: 1800 * 4,\n      cost: 2200 + 1600 * 3,\n    },\n    {\n      name: \"Panel and 4x Panel+\",\n      type: \"Home battery\",\n      capacity: 2200 * 5,\n      peak_discharge: 1800 * 5,\n      cost: 2200 + 1600 * 4,\n    },\n    {\n      name: \"Panel and 5x Panel+\",\n      type: \"Home battery\",\n      capacity: 2200 * 6,\n      peak_discharge: 1800 * 6,\n      cost: 2200 + 1600 * 5,\n    }\n  ],\n  \"LG Chem\": [\n    {\n      name: \"RESU7H\",\n      type: \"Home battery\",\n      capacity: 6600,\n      peak_discharge: 5000,\n      cost: 6260,\n\n    },\n    {\n      name: \"RESU10H\",\n      type: \"Home battery\",\n      capacity: 9300,\n      peak_discharge: 5000,\n      cost: 8100,\n    },\n    {\n      name: \"2x RESU7H\",\n      type: \"Home battery\",\n      capacity: 6600 * 2,\n      peak_discharge: 5000 * 2,\n      cost: 6260 * 2,\n    },\n    {\n      name: \"RESU7H + RESU10H\",\n      type: \"Home battery\",\n      capacity: 6600 + 9300,\n      peak_discharge: 5000 * 2,\n      cost: 6260 + 8100,\n    },\n    {\n      name: \"2x RESU10H\",\n      type: \"Home battery\",\n      capacity: 9300 * 2,\n      peak_discharge: 5000 * 2,\n      cost: 8100 * 2,\n    },\n    {\n      name: \"3x RESU10H\",\n      type: \"Home battery\",\n      capacity: 9300 * 3,\n      peak_discharge: 5000 * 3,\n      cost: 8100 * 3,\n    }\n  ],\n  \"Generac\": [\n    {\n      name: \"Home Standby Generator\",\n      type: \"Generator\",\n      capacity: 0,\n      peak_discharge: 16000,\n      cost: 5429,\n    }\n  ]\n}","// @flow\n\nimport { DEVICE_CYCLE_LENGTH, DEVICE_DAILY_FREQ, DEVICE_NAMES, DEVICE_PATTERNS, DEVICE_WATTAGE, HOURLY_PATTERNS } from \"./data\";\nimport type { QuestionnaireResponse, Model, ModelParams, DeviceDefinition } from './types'\n\n// parses questionnaire and params into a list of devices to simulate\n// result should be passed to generate_model\nexport function get_devices(questionnaire: QuestionnaireResponse, params: ModelParams): DeviceDefinition[] {\n  let devices = [...questionnaire.additionalDevices];\n\n  for (let name of DEVICE_NAMES) {\n    // special cases\n    if (name === \"ac\") {\n      if (!params.summer) {\n        continue;\n      }\n\n      if (Math.random() < (questionnaire.acUsage / 30)) {\n        // take into account how many days in a month AC is used\n        continue;\n      }\n\n      if (questionnaire.windowUnits > 0) {\n        for (let i = 0; i < questionnaire.windowUnits; i++) {\n          devices.push({\n            name: name,\n            freq: DEVICE_DAILY_FREQ[name],\n            cycle_length: DEVICE_CYCLE_LENGTH[name],\n            wattage: DEVICE_WATTAGE[name] * (questionnaire.squareFootage / 1000) / questionnaire.windowUnits,\n            pattern: null\n          })\n        }\n      } else {\n        // central air\n        devices.push({\n          name: name,\n          freq: DEVICE_DAILY_FREQ[name],\n          cycle_length: DEVICE_CYCLE_LENGTH[name],\n          wattage: DEVICE_WATTAGE[name] * (questionnaire.squareFootage / 1000),\n          pattern: null\n        })\n      }\n\n    } else if (name === \"heat\") {\n      if (params.summer) {\n        continue;\n      }\n\n      devices.push({\n        name: name,\n        freq: DEVICE_DAILY_FREQ[name],\n        cycle_length: DEVICE_CYCLE_LENGTH[name],\n        wattage: DEVICE_WATTAGE[name] * (questionnaire.squareFootage / 1000),\n        pattern: null\n      })\n    } else if (name === \"fridge\" || name === \"freezer\") {\n      devices.push({\n        name: name,\n        freq: DEVICE_DAILY_FREQ[name],\n        cycle_length: DEVICE_CYCLE_LENGTH[name],\n        wattage: DEVICE_WATTAGE[name],\n        pattern: null\n      })\n    } else {\n      devices.push({\n        name: name,\n        freq: questionnaire[name + \"Usage\"] / 7,\n        cycle_length: DEVICE_CYCLE_LENGTH[name],\n        wattage: DEVICE_WATTAGE[name],\n        pattern: null\n      })\n    }\n  }\n\n  // lights\n  for (let i = 0; i < questionnaire.numberOfPeopleInHousehold; i++) {\n    devices.push({\n      name: `lights${i}`,\n      freq: 8,\n      cycle_length: 60,\n      wattage: questionnaire.eeBulbs ? 40 : 200,\n      pattern: null,\n    })\n  }\n\n  return devices;\n}\n\nfunction init_device_cycles(devices: DeviceDefinition[]): { [string]: number } {\n  let device_cycles = {};\n  for (let device of devices) {\n    device_cycles[device.name] = 0;\n  }\n\n  return device_cycles\n}\n\n// generates a demand model over the course of a day\nexport function generate_model(devices: DeviceDefinition[], daily_target_demand: number): Model {\n  // Number of ticks to use\n  let minutes = 60 * 24;\n\n  // Total demand at each tick\n  let total_demand: number[] = Array(minutes).fill(0);\n  let device_demand: { [string]: number[] } = {};\n  for (const device of devices) {\n    device_demand[device.name] = [...total_demand];\n  }\n\n  // Track cycle progression for each device, indicates remaining ticks\n  let device_cycles = init_device_cycles(devices);\n\n  for (let i = 0; i < minutes; i++) {\n    for (const device of devices) {\n      if (device_cycles[device.name] > 0) {\n        // Decrement cycle length and add wattage to demand\n        device_cycles[device.name]--;\n\n        total_demand[i] += device.wattage\n        device_demand[device.name][i] += device.wattage\n      } else {\n        // Start a new cycle if random value is below threshold\n        let threshold = device.freq / minutes;\n        // Adjust threshold if relevant hourly pattern\n        let pattern_name = DEVICE_PATTERNS[device.name];\n        if (pattern_name !== undefined) {\n          let hour = Math.floor(i / 24);\n          let modifier = HOURLY_PATTERNS[pattern_name][hour];\n          threshold *= modifier * 24;\n        }\n\n        if (Math.random() < threshold) {\n          device_cycles[device.name] = device.cycle_length\n        }\n      }\n    }\n  }\n\n  // Scale demand to match actual amount\n\n  // Divide by 60 to convert watt-minutes to watt-hours\n  let daily_actual_demand = total_demand.reduce((a, b) => a + b, 0) / 60;\n\n  // Scale values to match power bill\n  let scaling_factor = daily_target_demand / daily_actual_demand;\n\n  total_demand = total_demand.map((watts) => watts * scaling_factor);\n  for (let device of devices) {\n    device_demand[device.name] = device_demand[device.name].map((watts) => watts * scaling_factor)\n  }\n\n  return { total_demand, device_demand };\n}\n\nexport function generate_timestamps(): number[] {\n  let timestamps = [];\n  for (let i = 0; i < 24 * 60; i++) {\n    timestamps.push(i * 60 * 1000);\n  }\n\n  return timestamps;\n}\n","import type { Model, Outage, SimulatorResult } from './types'\n\nexport function simulate_outage(model: Model, outage: Outage): SimulatorResult {\n  // debugger;\n  let result = {\n    peak_demand: 0,\n    total_demand: 0\n  }\n\n  for (let minute = outage.start; minute < outage.end; minute++) {\n    result.total_demand += model.total_demand[minute] / 60; // convert to watt-hours\n    result.peak_demand = Math.max(result.peak_demand, model.total_demand[minute]);\n  }\n\n  return result;\n}","import { simulate_outage } from './simulator';\nimport type { Model, Outage, RecommendationPerformance, SimulatorResult, StorageSolution } from './types'\n\nexport function assess_recommendation(\n  rec: StorageSolution,\n  models: Model[],\n  outages: { [string]: number }): RecommendationPerformance {\n  // Runs each outage type on each model. \n  // Returns the success or failure on each model for each outage.\n  // Maps outage name to an array of results: 1 (red) for charge and capacity failure,\n  // 2 (orange) for charge failure, 3 (yellow) for capacity failure, 4 (green) for all good\n\n  let perf: RecommendationPerformance = {};\n  for (let length of outages) {\n    let name = \"\";\n    if (length < 60) {\n      name = `${length} minutes`;\n    } else if (length < 120) {\n      name = `1 hour` + (length % 60 === 0 ? \"\" : ` ${length % 60} minutes`);\n    } else {\n      name = `${Math.floor(length / 60)} hours` + (length % 60 === 0 ? \"\" : ` ${length % 60} minutes`);\n    }\n\n    perf[name] = [];\n    for (let model of models) {\n      // randomize start time\n      let start_time = Math.floor(Math.random() * Math.floor(60 * 24 - length));\n      let sim_result: SimulatorResult = simulate_outage(model, {\n        start: start_time,\n        end: start_time + length\n      });\n\n      if (sim_result.peak_demand > rec.peak_discharge && rec.capacity > 0 && sim_result.total_demand > rec.capacity) {\n        perf[name].push(1);\n      } else if (sim_result.peak_demand > rec.peak_discharge) {\n        perf[name].push(2);\n      } else if (sim_result.total_demand > rec.capacity && rec.capacity) {\n        perf[name].push(3);\n      } else {\n        perf[name].push(4);\n      }\n    }\n  }\n\n  return perf;\n}","\n// @flow\nimport Container from '@material-ui/core/Container';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport Grid from '@material-ui/core/Grid';\nimport Link from '@material-ui/core/Link';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Typography from '@material-ui/core/Typography';\nimport React, { useEffect, useState } from 'react';\nimport RecommendationPanel from '../Components/RecommendationPanel';\nimport TopBar from '../Components/TopBar';\nimport { OUTAGES, STORAGE_DEVICES } from '../lib/data';\nimport { generate_model, get_devices } from '../lib/model';\nimport { assess_recommendation } from '../lib/recommender';\nimport type { QuestionnaireResponse } from '../lib/types';\n\n\nconst useStyles = makeStyles((theme) => ({\n  '@global': {\n    ul: {\n      margin: 0,\n      padding: 0,\n      listStyle: 'none',\n    },\n  },\n  appBar: {\n    borderBottom: `1px solid ${theme.palette.divider}`,\n  },\n  toolbar: {\n    flexWrap: 'wrap',\n  },\n  toolbarTitle: {\n    flexGrow: 1,\n  },\n  link: {\n    margin: theme.spacing(1, 1.5),\n  },\n  heroContent: {\n    padding: theme.spacing(8, 0, 6),\n  },\n  cardHeader: {\n    backgroundColor:\n      theme.palette.type === 'light' ? theme.palette.grey[200] : theme.palette.grey[700],\n  },\n  cardPricing: {\n    display: 'flex',\n    justifyContent: 'center',\n    alignItems: 'baseline',\n    marginBottom: theme.spacing(2),\n  },\n  footer: {\n    borderTop: `1px solid ${theme.palette.divider}`,\n    marginTop: theme.spacing(8),\n    paddingTop: theme.spacing(3),\n    paddingBottom: theme.spacing(3),\n    [theme.breakpoints.up('sm')]: {\n      paddingTop: theme.spacing(6),\n      paddingBottom: theme.spacing(6),\n    },\n  },\n}));\n\nexport const RecommendationsPage = (props: {\n  location: {\n    state: {\n      response: QuestionnaireResponse\n    }\n  }\n}): React$Element<\"div\"> => {\n  let response;\n  if (props.location.state) {\n    response = props.location.state.response;\n    localStorage.setItem('response', JSON.stringify(props.location.state));\n  } else {\n    let state = localStorage.getItem('response');\n    if (state !== null && state !== undefined) {\n      response = JSON.parse(state).response;\n    } else {\n      console.log(\"ERROR\");\n    }\n  }\n  console.log(response);\n\n  const classes = useStyles();\n  let [panels, setPanels] = useState([]);\n\n  useEffect(() => {\n    let M = 50;\n\n    // Generate M/2 example summer days and M/2 winter days\n    let models = (() => {\n      let m = [];\n      let summer_devices = get_devices(response, { summer: true });\n      let winter_devices = get_devices(response, { summer: false });\n      for (let i = 0; i < M / 2; i++) {\n\n        m.push(generate_model(summer_devices, response.summerUsage * 1000 / 30))\n        m.push(generate_model(winter_devices, response.winterUsage * 1000 / 30))\n      }\n      return m;\n    })()\n    console.log(models);\n\n    // Choose recommendations\n\n    // Analyze recommendation performance\n    let _panels = [];\n    for (let brand of Object.keys(STORAGE_DEVICES)) {\n      // start with the base model\n      let recommendation = STORAGE_DEVICES[brand][0];\n      let perf;\n      let percentages: { [string]: number } = {};\n\n      for (recommendation of STORAGE_DEVICES[brand]) {\n        perf = assess_recommendation(recommendation, models, OUTAGES);\n        percentages = {};\n        for (let [name, result] of Object.entries(perf)) {\n          // count successes\n          let successes = result.reduce((a, b) => a + (b === 4), 0);\n          let percentage = Math.round(successes * 100 / M);\n          percentages[name] = percentage;\n        }\n\n        let percentages_list: number[] = Object.values(percentages);\n        if (percentages_list[0] < 90 || percentages_list[1] < 75 || percentages_list[2] < 50) {\n          continue;\n        } else {\n          break;\n        }\n      }\n\n      let panel = {\n        title: brand,\n        subheader: recommendation.name,\n        output: recommendation.peak_discharge,\n        capacity: recommendation.capacity,\n        description: [],\n        buttonText: 'See details',\n        buttonVariant: 'outlined',\n        perf: perf,\n        cost: recommendation.cost,\n        type: recommendation.type,\n      }\n\n      for (let [name, percentage] of Object.entries(percentages)) {\n        panel.description.push(`Prevents ${percentage}% of ${name} outages`)\n      }\n      _panels.push(panel);\n    }\n\n    setPanels(_panels);\n  }, [])\n\n\n  return (\n    <div>\n      <CssBaseline />\n      <TopBar />\n      {/* Hero unit */}\n      <Container maxWidth=\"sm\" component=\"main\" className={classes.heroContent}>\n        <Typography component=\"h1\" variant=\"h2\" align=\"center\" color=\"textPrimary\" gutterBottom>\n          Recommendations\n        </Typography>\n        <Typography variant=\"h5\" align=\"center\" color=\"textSecondary\" component=\"p\">\n          According to your household's needs and power consumption patterns, we've provided 4 power solution choices\n          from leading brands that we hope will help you make an informed decision about your home power system.\n        </Typography>\n      </Container>\n      {/* End hero unit */}\n      <Container maxWidth=\"lg\" component=\"main\">\n        <Grid container spacing={2} alignItems=\"flex-start\">\n          {panels.map((panel) => (\n            <RecommendationPanel panel={panel} classes={classes} />\n          ))}\n        </Grid>\n      </Container>\n    </div>\n  );\n}\n\nexport default RecommendationsPage;","// @flow\n\nimport * as React from 'react';\nimport C3Chart from 'react-c3js';\nimport 'c3/c3.css';\n\nexport const UsageGraph = (props: { data: { [any]: number[] }, axis: number[] }): React.Node => {\n  let { data, axis } = props;\n\n  let cols = [['x'].concat(axis)];\n\n  for (const [device, usage] of Object.entries(data)) {\n    cols.push([device].concat(usage));\n  }\n\n  let ticks = [];\n  for (let i = 0; i < 60 * 24; i += 60) {\n    ticks.push(i * 1000 * 60);\n  }\n\n  return (\n    <C3Chart\n      data={{\n        x: 'x',\n        xFormat: '%H:%M:%S',\n        columns: cols,\n        type: 'area',\n        groups: [[...Object.keys(data)]],\n        order: 'desc',\n      }}\n      interaction={{\n        enabled: false\n      }}\n      transition={{\n        duration: 0\n      }}\n      point={{\n        show: false\n      }}\n      axis={{\n        x: {\n          type: 'timeseries',\n          localtime: false,\n          tick: {\n            values: ticks,\n            format: \"%H\",\n          },\n          padding: { left: 0 }\n        },\n        y: {\n          min: 0,\n          padding: 0,\n        },\n      }}\n    />\n  )\n\n}\n\nexport default UsageGraph;","// @flow\n\nimport { Button } from '@material-ui/core';\nimport * as React from 'react';\nimport { useEffect, useState } from \"react\";\nimport UsageGraph from '../../Components/UsageGraph';\nimport { EXAMPLE_RESPONSE } from '../../lib/data';\nimport { generate_model, generate_timestamps, get_devices } from '../../lib/model';\nimport { simulate_outage } from '../../lib/simulator';\nimport type { Model, ModelParams, QuestionnaireResponse } from '../../lib/types'\n\nexport const GraphTest = (): React.Node => {\n  let [totalDemand: { [string]: number[]}, setTotalDemand] = useState({});\n  let [deviceDemand: { [string]: number[]}, setDeviceDemand] = useState({});\n  let [axis, setAxis] = useState([]);\n  let [showDevices, setShowDevices] = useState(false);\n\n  useEffect(() => {\n    let questionnaire: QuestionnaireResponse = EXAMPLE_RESPONSE;\n    let params: ModelParams = { summer: true };\n    let devices = get_devices(questionnaire, params)\n    let daily_target_demand = (params.summer\n      ? questionnaire.summerUsage\n      : questionnaire.winterUsage)\n      * 1000 // kWh to Wh\n      / 30.5; // monthly -> daily\n    let model: Model = generate_model(devices, daily_target_demand);\n\n    setTotalDemand({ total: model.total_demand });\n    setDeviceDemand(model.device_demand);\n    setAxis(generate_timestamps());\n\n    console.log(simulate_outage(model, { start: 60, end: 120 }));\n  }, [])\n\n  if (showDevices) {\n    return <div key=\"show\">\n      <UsageGraph data={deviceDemand} axis={axis} />\n      <Button variant=\"contained\" onClick={() => setShowDevices(false)}>Hide devices</Button>\n    </div>\n  } else {\n    return <div key=\"hide\">\n      <UsageGraph data={totalDemand} axis={axis} />\n      <Button variant=\"contained\" onClick={() => setShowDevices(true)}>Show devices</Button>\n    </div>\n  }\n}\n\nexport default GraphTest;","import { Typography } from '@material-ui/core';\nimport Button from '@material-ui/core/Button';\nimport Checkbox from '@material-ui/core/Checkbox';\nimport FormControl from '@material-ui/core/FormControl';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport Grid from '@material-ui/core/Grid';\nimport InputLabel from '@material-ui/core/InputLabel';\nimport Select from '@material-ui/core/Select';\nimport { withStyles } from '@material-ui/core/styles';\nimport TextField from '@material-ui/core/TextField';\nimport React, { Component } from 'react';\n\nconst styles = {\n  buttons: {\n    marginTop: 60\n  },\n  title: {\n    height: 80,\n    fontFamily: \"sans-serif\",\n    fontWeight: 50,\n    fontSize: 32,\n  },\n  subTitle: {\n    height: 60,\n    fontFamily: \"sans-serif\",\n    fontWeight: 30,\n    fontSize: 24,\n    color: '#2e7d32',\n  },\n  question: {\n    height: 0,\n    fontFamily: \"sans-serif\",\n    fontWeight: 'bold',\n    fontSize: 18,\n    marginTop: 10,\n    marginBottom: 20\n  },\n  textBox: {\n    height: 120,\n    width: 300\n  },\n  options: {\n    height: 140,\n  },\n  shift: {\n    height: 1000,\n    marginLeft: 20,\n    marginTop: 20\n  },\n  back: {\n    marginTop: -10,\n    marginRight: 10\n  },\n  quantity: {\n    width: 40\n  },\n  windowOrCentral: {\n    width: 150\n  }\n};\n\n\nexport class FormApplianceInfo extends Component {\n  continue = e => {\n    e.preventDefault();\n    this.props.nextStep();\n  };\n\n  back = e => {\n    e.preventDefault();\n    this.props.prevStep();\n  };\n\n  render() {\n    const { values, handleCheckChange, handleFieldChange } = this.props;\n    const { classes } = this.props;\n    return (\n      <Grid className={classes.shift}>\n\n        <Typography className={classes.title}>Questionnaire</Typography>\n        <Typography className={classes.subTitle}>Appliance Information</Typography>\n\n        <Typography className={classes.question}>Which of the following appliances do you own?</Typography>\n\n        <FormControlLabel\n          control={\n            <Checkbox\n              checked={values.dishwasher}\n              onChange={handleCheckChange('dishwasher')}\n              color=\"secondary\"\n            />\n          }\n          label=\"Dishwasher\"\n        />\n        {!!values.dishwasher &&\n          <TextField\n            className={classes.quantity}\n            InputProps={{ inputProps: { min: 0 } }}\n            id=\"standard-number\"\n            label=\"Quantity\"\n            type=\"number\"\n            value={values.dishwasher}\n            onChange={handleFieldChange('dishwasher')}\n            InputLabelProps={{\n              shrink: true,\n            }}\n          />}\n        <br />\n        <FormControlLabel\n          control={\n            <Checkbox\n              checked={values.stove}\n              onChange={handleCheckChange('stove')}\n              color=\"secondary\"\n            />\n          }\n          label=\"Electric Stove\"\n        />\n        {!!values.stove &&\n          <TextField\n            className={classes.quantity}\n            InputProps={{ inputProps: { min: 0 } }}\n            id=\"standard-number\"\n            label=\"Quantity\"\n            type=\"number\"\n            value={values.stove}\n            onChange={handleFieldChange('stove')}\n            InputLabelProps={{\n              shrink: true,\n            }}\n          />}\n        <br />\n        <FormControlLabel\n          control={\n            <Checkbox\n              checked={values.oven}\n              onChange={handleCheckChange('oven')}\n              color=\"secondary\"\n            />\n          }\n          label=\"Electric Oven\"\n        />\n        {!!values.oven &&\n          <TextField\n            className={classes.quantity}\n            InputProps={{ inputProps: { min: 0 } }}\n            id=\"standard-number\"\n            label=\"Quantity\"\n            type=\"number\"\n            value={values.oven}\n            onChange={handleFieldChange('oven')}\n            InputLabelProps={{\n              shrink: true,\n            }}\n          />}\n        <br />\n        <FormControlLabel\n          control={\n            <Checkbox\n              checked={values.fridge}\n              onChange={handleCheckChange('fridge')}\n              color=\"secondary\"\n            />\n          }\n          label=\"Refrigerator\"\n        />\n        {!!values.fridge &&\n          <TextField\n            className={classes.quantity}\n            InputProps={{ inputProps: { min: 0 } }}\n            id=\"standard-number\"\n            label=\"Quantity\"\n            type=\"number\"\n            value={values.fridge}\n            onChange={handleFieldChange('fridge')}\n            InputLabelProps={{\n              shrink: true,\n            }}\n          />}\n        <br />\n        <FormControlLabel\n          control={\n            <Checkbox\n              checked={values.freezer}\n              onChange={handleCheckChange('freezer')}\n              color=\"secondary\"\n            />\n          }\n          label=\"Separate freezer\"\n        />\n        {!!values.freezer &&\n          <TextField\n            className={classes.quantity}\n            InputProps={{ inputProps: { min: 0 } }}\n            id=\"standard-number\"\n            label=\"Quantity\"\n            type=\"number\"\n            value={values.freezer}\n            onChange={handleFieldChange('freezer')}\n            InputLabelProps={{\n              shrink: true,\n            }}\n          />}\n        <br />\n        <FormControlLabel\n          control={\n            <Checkbox\n              checked={values.washer}\n              onChange={handleCheckChange('washer')}\n              color=\"secondary\"\n            />\n          }\n          label=\"Washer\"\n        />\n        <br />\n        <FormControlLabel\n          control={\n            <Checkbox\n              checked={values.dryer}\n              onChange={handleCheckChange('dryer')}\n              color=\"secondary\"\n            />\n          }\n          label=\"Dryer\"\n        />\n        <br />\n        <FormControlLabel\n          control={\n            <Checkbox\n              checked={values.heat}\n              onChange={handleCheckChange('heat')}\n              color=\"secondary\"\n            />\n          }\n          label=\"Electric heating\"\n        />\n        <br />\n        <FormControlLabel\n          control={\n            <Checkbox\n              checked={values.ac}\n              onChange={handleCheckChange('ac')}\n              color=\"secondary\"\n            />\n          }\n          label=\"Air Conditioning\"\n        />\n        {!!values.ac &&\n          <FormControl className={classes.windowOrCentral} >\n            <InputLabel htmlFor=\"age-native-simple\">Window or Central?</InputLabel>\n            <Select\n              style={{ width: 120 }}\n              native\n              label=\"Window or Central?\"\n              onChange={handleFieldChange('windowOrCentral')}\n              inputProps={{\n                id: 'age-native-simple',\n              }}\n            >\n              <option value={0}>Central</option>\n              <option value={1}>Window</option>\n            </Select>\n          </FormControl>\n        }\n        {(values.windowOrCentral === '1' && !!values.ac) &&\n          <TextField\n            className={classes.quantity}\n            id=\"standard-number\"\n            label=\"Quantity\"\n            type=\"number\"\n            InputProps={{ inputProps: { min: 0 } }}\n            value={values.windowUnits}\n            onChange={handleFieldChange('windowUnits')}\n            InputLabelProps={{\n              shrink: true,\n            }}\n          />}\n        <br />\n        <FormControlLabel\n          control={\n            <Checkbox\n              checked={values.eeBulbs}\n              onChange={handleCheckChange('eeBulbs')}\n              color=\"secondary\"\n            />\n          }\n          label=\"Energy-efficient light bulbs\"\n        />\n        <br />\n        <Grid>\n          <Button\n            className={classes.back}\n            color=\"primary\"\n            variant=\"contained\"\n            onClick={this.back}\n          >Back</Button>\n\n          <Button\n            color=\"secondary\"\n            variant=\"contained\"\n            onClick={this.continue}\n          >Continue</Button>\n        </Grid>\n      </Grid>\n    );\n  }\n}\n\nexport default withStyles(styles)(FormApplianceInfo);","import { Typography } from '@material-ui/core';\nimport { withStyles } from '@material-ui/core/styles';\nimport TextField from '@material-ui/core/TextField';\nimport React, { Component } from 'react';\n\nconst styles = {\n  question: {\n    height: 20,\n    fontFamily: \"sans-serif\",\n    fontWeight: 'bold',\n    fontSize: 18,\n    marginTop: 10,\n    marginBottom: 20\n  },\n  textBox: {\n    height: 120,\n    width: 300\n  },\n  options: {\n    height: 140,\n  },\n  shift: {\n    marginLeft: 20,\n    marginTop: 20\n  },\n  back: {\n    marginTop: -10,\n    marginRight: 10\n  }\n};\n\n\nexport class ApplianceUsageQuestion extends Component {\n  render() {\n    const { usage, handleChange, applianceName, applianceKey, quantity } = this.props;\n    const { classes } = this.props;\n    const plural = quantity > 1 ? 's' : '';\n\n    return (<>\n      <Typography className={classes.question}>How many times does your household use your {applianceName}{plural} in an average week?</Typography>\n\n      <TextField\n        id=\"standard-number\"\n        label=\"Number of uses\"\n        InputProps={{ inputProps: { min: 0 } }}\n        type=\"number\"\n        value={usage}\n        onChange={handleChange(applianceKey)}\n        InputLabelProps={{\n          shrink: true,\n        }}\n      />\n      <br />\n    </>\n    );\n  }\n}\n\nexport default withStyles(styles)(ApplianceUsageQuestion);","import { Typography } from '@material-ui/core';\nimport Button from '@material-ui/core/Button';\nimport Grid from '@material-ui/core/Grid';\nimport { withStyles } from '@material-ui/core/styles';\nimport TextField from '@material-ui/core/TextField';\nimport React, { Component } from 'react';\nimport ApplianceUsageQuestion from './ApplianceUsageQuestion';\n\nconst styles = {\n  buttons: {\n    marginTop: 60\n  },\n  title: {\n    height: 80,\n    fontFamily: \"sans-serif\",\n    fontWeight: 50,\n    fontSize: 32,\n  },\n  subTitle: {\n    height: 60,\n    fontFamily: \"sans-serif\",\n    fontWeight: 30,\n    fontSize: 24,\n    color: '#2e7d32',\n  },\n  question: {\n    height: 20,\n    fontFamily: \"sans-serif\",\n    fontWeight: 'bold',\n    fontSize: 18,\n    marginTop: 10,\n    marginBottom: 20\n  },\n  textBox: {\n    height: 70,\n    width: 300,\n    marginTop: -10\n  },\n  options: {\n    height: 140,\n  },\n  shift: {\n    marginLeft: 20,\n    marginTop: 20\n  },\n  back: {\n    marginTop: -10,\n    marginRight: 10\n  }\n};\n\n\nexport class FormApplianceUsage extends Component {\n  continue = e => {\n    e.preventDefault();\n    this.props.nextStep();\n  };\n\n  back = e => {\n    e.preventDefault();\n    this.props.prevStep();\n  };\n\n  render() {\n    const { values, handleChange } = this.props;\n    const { classes } = this.props;\n    return (\n      <Grid className={classes.shift}>\n\n        <Typography className={classes.title}>Questionnaire</Typography>\n        <Typography className={classes.subTitle}>Appliance Usage</Typography>\n\n        {!!values.dishwasher &&\n          <ApplianceUsageQuestion\n            applianceName='dishwasher'\n            applianceKey='dishwasherUsage'\n            quantity={values.dishwasher}\n            handleChange={handleChange}\n            usage={values.dishwasherUsage}\n          />\n        }\n        {!!values.stove &&\n          <ApplianceUsageQuestion\n            applianceName='stove'\n            applianceKey='stoveUsage'\n            quantity={values.stove}\n            handleChange={handleChange}\n            usage={values.stoveUsage}\n          />\n        }\n        {!!values.oven &&\n          <ApplianceUsageQuestion\n            applianceName='oven'\n            applianceKey='ovenUsage'\n            quantity={values.oven}\n            handleChange={handleChange}\n            usage={values.ovenUsage}\n          />\n        }\n\n        {!!values.washer &&\n          <Typography className={classes.question}>How many loads of laundry does your household wash in an average week?</Typography>\n        }\n\n        {!!values.washer &&\n          <TextField\n            id=\"standard-number\"\n            label=\"Number of uses\"\n            type=\"number\"\n            value={values.washerUsage}\n            onChange={handleChange('washerUsage')}\n            InputLabelProps={{\n              shrink: true,\n            }}\n          />\n        }\n        <br />\n        {!!values.dryer &&\n          <ApplianceUsageQuestion\n            applianceName='dryer'\n            applianceKey='dryerUsage'\n            quantity={values.dryer}\n            handleChange={handleChange}\n            usage={values.dryerUsage}\n          />\n        }\n        <br />\n        {!!values.ac &&\n          <Typography className={classes.question}>In the summer, how many days a month do you use your air conditioner?</Typography>}\n\n        {!!values.ac &&\n          <TextField\n            className={classes.textBox}\n            placeholder=\"Days per month\"\n            label=\"Days per month\"\n            onChange={handleChange('acUsage')}\n            margin=\"small\"\n            fullWidth\n          />\n        }\n        <Grid>\n          <Button\n            className={classes.back}\n            color=\"primary\"\n            variant=\"contained\"\n            onClick={this.back}\n          >Back</Button>\n\n          <Button\n            color=\"secondary\"\n            variant=\"contained\"\n            onClick={this.continue}\n          >Continue</Button>\n        </Grid>\n      </Grid>\n    );\n  }\n}\n\nexport default withStyles(styles)(FormApplianceUsage);","import { Tooltip, Typography } from '@material-ui/core';\nimport Button from '@material-ui/core/Button';\nimport FormControl from '@material-ui/core/FormControl';\nimport Grid from '@material-ui/core/Grid';\nimport InputLabel from '@material-ui/core/InputLabel';\nimport Select from '@material-ui/core/Select';\nimport { withStyles } from '@material-ui/core/styles';\nimport TextField from '@material-ui/core/TextField';\nimport HelpIcon from '@material-ui/icons/Help';\nimport React, { Component } from 'react';\n\nconst styles = {\n  title: {\n    height: 80,\n    fontFamily: \"sans-serif\",\n    fontWeight: 50,\n    fontSize: 32,\n  },\n  subTitle: {\n    height: 60,\n    fontFamily: \"sans-serif\",\n    fontWeight: 30,\n    fontSize: 24,\n    color: '#2e7d32',\n  },\n  question: {\n    height: 0,\n    fontFamily: \"sans-serif\",\n    fontWeight: 'bold',\n    fontSize: 18,\n    marginTop: 10\n  },\n  textBox: {\n    width: 300\n  },\n  options: {\n    height: 140,\n  },\n  shift: {\n    marginLeft: 20,\n    marginTop: 20\n  },\n};\n\n\nexport class FormPriority extends Component {\n  continue = e => {\n    e.preventDefault();\n    if (this.props.values.location !== '' && this.props.values.squareFootage !== 0\n      && this.props.values.numberOfPeopleInHousehold !== 0 && this.props.values.summerUsage !== 0\n      && this.props.values.winterUsage !== 0) {\n      this.props.nextStep();\n    }\n  };\n\n  render() {\n    const { handleChange, values } = this.props;\n    const { classes } = this.props;\n    return (\n      <Grid className={classes.shift}>\n\n        <Typography className={classes.title}>Questionnaire</Typography>\n        <Typography className={classes.subTitle}>Housing Information</Typography>\n\n        <Typography className={classes.question}>\n          What province/territory do you live in?&nbsp;\n          <Tooltip\n            title=\"We'll use this information to estimate the types of power outages you're most likely to experience.\"\n            placement=\"right\" arrow>\n            <HelpIcon fontSize=\"small\" />\n          </Tooltip>\n        </Typography>\n        <br />\n        <FormControl>\n          <InputLabel htmlFor=\"age-native-simple\"></InputLabel>\n          <Select\n            native\n            onChange={handleChange('location')}\n            inputProps={{\n              id: 'age-native-simple',\n            }}\n            value={values.location}\n          >\n            <option aria-label=\"None\" value=\"\" />\n            <option value={'ON'}>Ontario</option>\n            <option value={'QC'}>Quebec</option>\n            <option value={'MB'}>Manitoba</option>\n            <option value={'SK'}>Saskatchewan</option>\n            <option value={'AB'}>Alberta</option>\n            <option value={'BC'}>British Columbia</option>\n            <option value={'NL'}>Newfoundland and Labrador</option>\n            <option value={'NS'}>Nova Scotia</option>\n            <option value={'NB'}>New Brunswick</option>\n            <option value={'PE'}>Prince Edward Island</option>\n            <option value={'NU'}>Nunavut</option>\n            <option value={'NT'}>Northwest Territories</option>\n            <option value={'YT'}>Yukon</option>\n\n          </Select>\n        </FormControl>\n        <br />\n\n        <Typography className={classes.question}>\n          What is the square footage of your home?&nbsp;\n          <Tooltip\n            title=\"If you're not sure, some estimates are about 500 sq. ft. for a studio apartment, 800 sq. ft. for a 1 bedroom apartment, and 1200 sq. ft. for a townhouse. Please include all living space, including basements!\"\n            placement=\"right\" arrow>\n            <HelpIcon fontSize=\"small\" />\n          </Tooltip>\n        </Typography>\n        <br />\n        <TextField\n          className={classes.textBox}\n          type=\"number\"\n          placeholder=\"Square Footage\"\n          label=\"Square Footage\"\n          value={values.squareFootage}\n          onChange={handleChange('squareFootage')}\n          margin=\"normal\"\n          fullWidth\n        />\n        <br />\n\n        <Typography className={classes.question}>\n          How many people live in your home?&nbsp;\n        </Typography>\n        <br />\n        <TextField\n          className={classes.textBox}\n          type=\"number\"\n          placeholder=\"Size of household\"\n          label=\"Size of household\"\n          value={values.numberOfPeopleInHousehold}\n          onChange={handleChange('numberOfPeopleInHousehold')}\n          margin=\"normal\"\n          fullWidth\n        />\n        <br />\n\n        <Typography className={classes.question}>\n          What is your average monthly power usage during the summer (kWh)?&nbsp;\n          {/*See https://energyrates.ca/residential-electricity-natural-gas/ for reference*/}\n          <Tooltip title=\"You can find this information on a recent power bill. For context,\n           the average Ontario household using about 800 kWh of electricity per month.\" placement=\"right\" arrow><HelpIcon fontSize=\"small\" /></Tooltip>\n        </Typography>\n\n        <br />\n        <TextField\n          className={classes.textBox}\n          type=\"number\"\n          placeholder=\"Monthly usage\"\n          label=\"Monthly usage\"\n          value={values.summerUsage}\n          onChange={handleChange('summerUsage')}\n          margin=\"normal\"\n          fullWidth\n        />\n        <br />\n\n        <Typography className={classes.question}>\n          What is your average monthly power usage during the winter (kWh)?&nbsp;\n          <Tooltip title=\"You can find this information on a recent power bill. For context,\n           the average Ontario household using about 800 kWh of electricity per month.\" placement=\"right\" arrow><HelpIcon fontSize=\"small\" /></Tooltip>\n        </Typography>\n        <br />\n        <TextField\n          className={classes.textBox}\n          type=\"number\"\n          placeholder=\"Monthly usage\"\n          label=\"Monthly usage\"\n          value={values.winterUsage}\n          onChange={handleChange('winterUsage')}\n          margin=\"normal\"\n          fullWidth\n        />\n        <br />\n\n        <Button\n          color=\"secondary\"\n          variant=\"contained\"\n          onClick={this.continue}\n        >Continue</Button>\n      </Grid>\n    );\n  }\n}\n\nexport default withStyles(styles)(FormPriority);","import { Button } from '@material-ui/core';\nimport AppBar from '@material-ui/core/AppBar';\nimport Dialog from '@material-ui/core/Dialog';\nimport React, { Component } from 'react';\nimport { Link } from 'react-router-dom';\n\nexport class Success extends Component {\n  continue = e => {\n    e.preventDefault();\n    // PROCESS FORM //\n    this.props.nextStep();\n  };\n\n  back = e => {\n    e.preventDefault();\n    this.props.prevStep();\n  };\n\n  render() {\n    let values = this.props.values;\n    return (\n      <>\n        <Dialog\n          open\n          fullWidth\n          maxWidth='sm'\n        >\n          <AppBar title=\"Success\" />\n          <h1>Thank You For Your Submission</h1>\n          <Link to={{ pathname: \"/recommendations\", state: { response: values } }}>\n            <Button\n              color=\"secondary\"\n              variant=\"contained\"\n            >Continue</Button>\n          </Link>\n        </Dialog>\n      </>\n    );\n  }\n}\n\nexport default Success;","import React, { Component } from 'react';\nimport FormApplianceInfo from '../Components/FormApplianceInfo';\nimport FormApplianceUsage from '../Components/FormApplianceUsage';\nimport FormHousingInfo from '../Components/FormHousingInfo';\nimport Success from '../Components/Success';\nimport TopBar from '../Components/TopBar';\n\nexport class UserForm extends Component {\n  state = {\n    step: 1,\n    location: '',\n    squareFootage: '',\n    numberOfPeopleInHousehold: '',\n    summerUsage: '',\n    winterUsage: '',\n    dishwasher: 0,\n    stove: 0,\n    oven: 0,\n    fridge: 0,\n    freezer: 0,\n    washer: 0,\n    dryer: 0,\n    heat: 0,\n    ac: 0,\n    dishwasherUsage: 0,\n    stoveUsage: 0,\n    ovenUsage: 0,\n    washerUsage: 0,\n    dryerUsage: 0,\n    acUsage: 0,\n    windowOrCentral: 0,\n    windowUnits: 0,\n    additionalDevices: []\n  };\n\n  // Proceed to next step\n  nextStep = () => {\n    const { step } = this.state;\n    this.setState({\n      step: step + 1\n    });\n  };\n\n  // Go back to prev step\n  prevStep = () => {\n    const { step } = this.state;\n    this.setState({\n      step: step - 1\n    });\n  };\n\n  // Handle fields change\n  handleFieldChange = input => e => {\n    this.setState({ [input]: e.target.type === 'number' ? parseInt(e.target.value) : e.target.value });\n    console.log(this.state)\n  };\n\n  // Handle checkbox change\n  handleCheckChange = input => e => {\n    if (this.state[input] === 0)\n      this.setState({ [input]: 1 });\n    else\n      this.setState({ [input]: 0 });\n  };\n\n  render() {\n    const { step } = this.state;\n    const { priority, location, squareFootage, monthlyUsage, dishwasher, stove, oven, fridge,\n      freezer, washer, dryer, ac, heat, dishwasherUsage, stoveUsage, ovenUsage, secondFridge, secondFreezer,\n      washerUsage, dryerUsage, acUsage, additionalDevices, summerUsage, winterUsage, windowOrCentral, numberOfPeopleInHousehold } = this.state;\n    const values = {\n      priority, location, squareFootage, monthlyUsage, dishwasher, stove, oven, fridge,\n      freezer, washer, dryer, ac, heat, dishwasherUsage, stoveUsage, ovenUsage, secondFridge, secondFreezer,\n      washerUsage, dryerUsage, acUsage, additionalDevices, summerUsage, winterUsage, windowOrCentral, numberOfPeopleInHousehold\n    };\n\n\n    let innerForm = (() => {\n      switch (step) {\n        case 1:\n          return (\n            <FormHousingInfo\n              nextStep={this.nextStep}\n              handleChange={this.handleFieldChange}\n              values={values}\n            />\n\n          );\n        case 2:\n          return (\n            <FormApplianceInfo\n              nextStep={this.nextStep}\n              prevStep={this.prevStep}\n              handleCheckChange={this.handleCheckChange}\n              handleFieldChange={this.handleFieldChange}\n              values={values}\n            />\n          );\n        case 3:\n          if (values.dishwasher || values.stove || values.washer || values.dryer || values.ac || values.fridge || values.freezer) {\n            return (\n              <FormApplianceUsage\n                nextStep={this.nextStep}\n                prevStep={this.prevStep}\n                handleChange={this.handleFieldChange}\n                values={values}\n              />\n            )\n          };\n          return <Success values={values} />\n        case 4:\n          return <Success values={values} />\n        default:\n          (console.log('This is a multi-step form built with React.'))\n      }\n    })();\n\n\n    return <>\n      <TopBar />\n      {innerForm}\n    </>\n\n  }\n}\n\nexport default UserForm;","export default __webpack_public_path__ + \"static/media/homescreen.07cd58d9.png\";","import React, { Component } from 'react';\nimport homescreen from '../Images/homescreen.png';\nimport { createMuiTheme, ThemeProvider as MuiThemeProvider } from '@material-ui/core/styles';\nimport { withStyles } from '@material-ui/core/styles';\nimport Button from '@material-ui/core/Button';\nimport TopBar from '../Components/TopBar';\nimport blueGrey from '@material-ui/core/colors/blueGrey';\nimport green from '@material-ui/core/colors/green';\nimport Grid from '@material-ui/core/Grid';\nimport { Typography } from '@material-ui/core';\nimport { Link } from 'react-router-dom';\n\nconst theme = createMuiTheme({\n  palette: {\n    primary: {\n      main: blueGrey[50],\n    },\n    secondary: {\n      main: green[800],\n    },\n  },\n  spacing: 8\n});\n\nconst styles = {\n    shift: {\n        marginLeft: 130,\n        marginTop: 20\n    },\n\n    title: {\n        //height: 80,\n        fontSize: 32,\n        marginTop: 20,\n        fontWeight: 'bold',\n        width: 600\n    },\n\n    subtitle: {\n        //height: 60,\n        fontSize: 24,\n        marginTop: 20,\n        width: 600\n    },\n\n    subtitle2: {\n        //height: 100,\n        fontSize: 22,\n        marginTop: 20,\n        color: '#2e7d32',\n        width: 500\n    },\n\n    image: {\n        height: 550,\n        width: 400,\n        marginTop: 40,\n        marginLeft: 100\n    },\n\n    flex: {\n        display: 'flex'\n    },\n};\n\n\nexport class HomePage extends Component {\n\n  render() {\n    const { classes } = this.props || {};\n    console.log(this.props)\n    return (\n      <MuiThemeProvider theme= {theme}> \n            <TopBar />\n            <Grid className={classes.flex}>\n\n                <Grid className={classes.shift}>\n                    <Typography className={classes.title}>Welcome to Lithium.</Typography>\n                    <Typography className={classes.subtitle}>We are a home power recommendation engine to help you become informed about power options for your home.</Typography>\n                    <Typography className={classes.subtitle}>Our goal is to give you personalized information about which home power devices are best suited for your home.</Typography>\n                    <Typography className={classes.subtitle2}>We&#39;ll ask you for some information about your home and give you curated recommendations.</Typography>\n                    <Typography className={classes.subtitle2}>Ready to give it a try? Click the button to get started.</Typography>\n                    <Typography className={classes.title}> </Typography>\n                    <Typography className={classes.title}> </Typography>\n\n                    <Link to={{ pathname: \"/survey\" }} style={{ textDecoration: 'none' }} color=\"secondary\">\n                        <Button\n                            color=\"secondary\"\n                            variant=\"contained\"\n                            onClick={this.continue}\n                            >Start Questionnaire\n                        </Button>\n                    </Link>\n\n                </Grid>\n\n                <img className={classes.image} src={homescreen} alt=\"home page image\" /> \n\n            </Grid>\n\n      </MuiThemeProvider>\n    );\n  }\n}\n\nexport default withStyles(styles)(HomePage);","import { createMuiTheme, MuiThemeProvider } from '@material-ui/core';\nimport { blueGrey, green } from '@material-ui/core/colors';\nimport React from 'react';\nimport { HashRouter, Route, Switch } from 'react-router-dom';\nimport { NotFoundPage } from './Pages/NotFoundPage';\nimport { RecommendationsPage } from './Pages/RecommendationsPage';\nimport { GraphTest } from './Pages/test/GraphTest';\nimport { UserForm } from './Pages/UserForm';\nimport HomePage from './Pages/HomePage';\n\nconst App = () => {\n  const theme = createMuiTheme({\n    palette: {\n      primary: {\n        main: blueGrey[50],\n      },\n      secondary: {\n        main: green[800],\n      },\n    },\n    spacing: 8\n  });\n\n  return (\n    <div className=\"App\">\n      <MuiThemeProvider theme={theme}>\n        <HashRouter>\n          <Switch>\n            <Route exact path=\"/\" component={HomePage}></Route>\n            <Route exact path=\"/survey\" component={UserForm}></Route>\n            <Route path=\"/recommendations\" component={RecommendationsPage}></Route>\n            <Route path=\"/graph\" component={GraphTest}></Route>\n            <Route path=\"/\" component={NotFoundPage}></Route>\n            {/* <Route path=\"/airtable\" component={AirtableTest}></Route>\n          <Route path=\"/simulator\" component={SimulatorTest}></Route>\n          <Route path=\"/performance\" component={PerformanceTest}></Route> */}\n          </Switch>\n        </HashRouter>\n      </MuiThemeProvider>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}